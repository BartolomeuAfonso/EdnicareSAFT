/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package CLINICA.view;

import CLINICA.controller.ControllerNotas;
import CLINICA.controller.ControllerNotasItens;
import CLINICA.controller.ControllerFactura;
import CLINICA.controller.ControllerFacturaItens;
import CLINICA.controller.ControllerServico;
import CLINICA.controller.ControllerUtente;
import CLINICA.modelo.Notacredito;
import CLINICA.modelo.NotaCreditoItens;
import CLINICA.relatorios.RelatorioNota;
import java.awt.Image;
import java.awt.Toolkit;
import java.math.BigDecimal;
import java.net.URL;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Calendar;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;
import sf.ce.conexao.ConexaoBancos;

/**
 *
 * @author Ba
 */
public class NotaView extends javax.swing.JFrame {

    /**
     * Creates new form NotaView
     */
    ControllerNotas controllerNotas;
    ControllerNotasItens controllerNotasItens;
    ControllerFactura controllerFactura;
    ControllerFacturaItens controllerFacturaItens;
    Connection con;
    ConexaoBancos conexao;
    PreparedStatement ps;
    ResultSet rs;
    Notacredito factura = new Notacredito();
    NotaCreditoItens facturaItens = new NotaCreditoItens();
    ControllerUtente utentes;
    int tipoCodigoArea;
    int user;
    private final DefaultTableModel defaultTableModel, defaultTableModel1;
    ControllerServico controllerServico;
    RelatorioNota relatorioNota = new RelatorioNota();

    public NotaView(int codigo, int codigoArea) {
        initComponents();
        this.user = codigo;
        controllerFactura = new ControllerFactura(con);
        controllerNotas = new ControllerNotas(con);
        controllerNotasItens = new ControllerNotasItens(con);
        controllerFacturaItens = new ControllerFacturaItens(con);
        utentes = new ControllerUtente(con);
        this.tipoCodigoArea = codigoArea;
        defaultTableModel1 = (DefaultTableModel) jTable1.getModel();
        defaultTableModel = (DefaultTableModel) jTable2.getModel();
        controllerServico = new ControllerServico(con);
        jComboBox1.setModel(new DefaultComboBoxModel(controllerFactura.getNome().toArray()));
        //    int codigoCliente = utentes.getCodigoUtente(jComboBox1.getSelectedItem().toString());
        //  jComboBox2.setModel(new DefaultComboBoxModel(controllerFactura.getFactura(codigoCliente).toArray()));
        setLocationRelativeTo(null);
        iconeSistema();
    }

    public final void iconeSistema() {
        URL caminho = this.getClass().getResource("/sf/ce/imagens/Icons/logoteste2.jpg");
        Image iconeTitulo = Toolkit.getDefaultToolkit().getImage(caminho);
        this.setIconImage(iconeTitulo);
    }

    public int getCodigoCliente() {
        return utentes.getCodigoUtente(jComboBox1.getSelectedItem().toString());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jComboBox2 = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabelNome = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jTextFieldTotaPagar = new javax.swing.JTextField();
        jTextFieldDesconto = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        jRadioButton5 = new javax.swing.JRadioButton();
        jRadioButton6 = new javax.swing.JRadioButton();
        jRadioButton7 = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Nota de Crédito");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Factura"));

        jTextField1.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1CaretUpdate(evt);
            }
        });

        jLabel1.setText("Buscar");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Designacao", "Qtd", "Preço"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
        }

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jLabel5.setText("Lista de Factura:");

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setSelected(true);
        jRadioButton1.setText("Reficação");

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setText("Anulação");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 362, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jRadioButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jRadioButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextField1))
                .addGap(18, 18, 18)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(19, 19, 19)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton1)
                    .addComponent(jRadioButton2))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Nota de Crédito", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        jLabel2.setText("Cliente:");

        jLabelNome.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jLabel3.setText("Nota Referente Factura nº: ");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jLabel6.setText("Motivo:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabelNome, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(jTextField2)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabelNome, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jTextField2))
                .addContainerGap())
        );

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Designacao", "Qtd", "Preço", "IVA", "Total"
            }
        ));
        jScrollPane2.setViewportView(jTable2);
        if (jTable2.getColumnModel().getColumnCount() > 0) {
            jTable2.getColumnModel().getColumn(0).setResizable(false);
            jTable2.getColumnModel().getColumn(1).setResizable(false);
            jTable2.getColumnModel().getColumn(2).setResizable(false);
            jTable2.getColumnModel().getColumn(3).setResizable(false);
        }

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Operação"));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sf/ce/imagens/Icons/icons8-ok-filled-32.png"))); // NOI18N
        jButton1.setText("Salvar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sf/ce/imagens/Icons/icons8-cancel-filled-32.png"))); // NOI18N
        jButton2.setText("Remover");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 12, Short.MAX_VALUE))
        );

        jTextFieldTotaPagar.setEditable(false);
        jTextFieldTotaPagar.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Valor Total"));

        jTextFieldDesconto.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Desconto Total"));

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 153)), "Tipo de Papel", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Century Gothic", 1, 11))); // NOI18N

        buttonGroup2.add(jRadioButton5);
        jRadioButton5.setFont(new java.awt.Font("Century Gothic", 1, 11)); // NOI18N
        jRadioButton5.setText("A5");

        buttonGroup2.add(jRadioButton6);
        jRadioButton6.setFont(new java.awt.Font("Century Gothic", 1, 11)); // NOI18N
        jRadioButton6.setSelected(true);
        jRadioButton6.setText("Ticket");

        buttonGroup2.add(jRadioButton7);
        jRadioButton7.setFont(new java.awt.Font("Century Gothic", 1, 11)); // NOI18N
        jRadioButton7.setText("A4");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jRadioButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(jRadioButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53)
                .addComponent(jRadioButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton5)
                    .addComponent(jRadioButton7)
                    .addComponent(jRadioButton6))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jTextFieldTotaPagar, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextFieldDesconto)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextFieldTotaPagar)
                            .addComponent(jTextFieldDesconto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setBounds(0, 0, 876, 584);
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed

        jLabel4.setText(controllerFactura.getCodigoReferencia(jComboBox2.getSelectedItem().toString()));
        mostrarFactura("SELECT DISTINCT s.idServico as idServico, s.designacao as designacao,f1.quantidade as quantidade, f1.preco as preco FROM factura f inner join factura_itens f1 on f.idFactura =f1.codigoFactura\n"
                + "inner join servicos s on s.idServico =f1.codigoProduto where f1.codigoFactura='" + jComboBox2.getSelectedItem().toString() + "' AND f1.flag = 1");
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        jLabelNome.setText(jComboBox1.getSelectedItem().toString());
        int codigoCliente = utentes.getCodigoUtente(jComboBox1.getSelectedItem().toString());
        jComboBox2.setModel(new DefaultComboBoxModel(controllerFactura.getFactura(codigoCliente).toArray()));
        limparVenda();
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        inserirTabela();
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        salvarFactura();
        salvarItemFacturaNota();
        salvarItemFactura();
        int codigoFactura = controllerNotas.getLastNota();
        if (jRadioButton7.isSelected()) {
            relatorioNota.getFacturaA4Nota(codigoFactura);
            limparVenda();
        }

        if (jRadioButton6.isSelected()) {
            relatorioNota.getFacturaticketNotaCredito(codigoFactura);
            limparVenda();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField1CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1CaretUpdate
        jComboBox1.setModel(new DefaultComboBoxModel(controllerFactura.getNomeLike(jTextField1.getText()).toArray()));
    }//GEN-LAST:event_jTextField1CaretUpdate

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int linha = jTable2.getSelectedRow();
        if (linha != -1) {
            defaultTableModel.removeRow(jTable2.getSelectedRow());
            actualizarValorApagar();
            actualizarValorIva();
            actualizar();

        } else {
            JOptionPane.showMessageDialog(rootPane, "Selecione um produto na tabela!");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    public void limparVenda() {
        jTextFieldTotaPagar.setText("0");
        jTextFieldDesconto.setText("0");
        defaultTableModel.setRowCount(0);
        defaultTableModel1.setRowCount(0);
    }

    public int getCodigoUtilizador() {
        return user;

    }

    public double getTotalDesconto() {
        return Double.valueOf(jTextFieldDesconto.getText());
    }

    public int getQuantidadeGeral() {
        int total = 0;
        for (int i = 0; i < jTable2.getRowCount(); i++) {
            int quant = Integer.parseInt((jTable2.getValueAt(i, 2).toString()));
            total = total + quant;
        }
        return total;
    }

    public double getValorApagar() {
        double valor = 0;
        try {
            if (!jTextFieldTotaPagar.getText().equals("")) {
                valor = Double.parseDouble(jTextFieldTotaPagar.getText());
            }

        } catch (NumberFormatException ex) {
            ex.printStackTrace();
        }
        return valor;
    }

    public double getDescontoIVA() {
        double valor = 0;
        for (int i = 0; i < jTable2.getRowCount(); i++) {
            int codigoProduto = Integer.parseInt(jTable2.getValueAt(i, 0).toString());
            int codigoTaxa = controllerServico.getCodigoTaxa(codigoProduto);
            double valorUnitario = Double.parseDouble(jTable2.getValueAt(i, 3).toString());
            if (codigoTaxa == 14) {
                valor = valor + (valorUnitario * 0.14);
            } else {
                valor = valor + (valorUnitario * 0);
            }
        }

        return valor;
    }

    public String getDataActual() {
        Calendar calendario = Calendar.getInstance();

        //buscar data
        int dia = calendario.get(Calendar.DAY_OF_MONTH);
        int mes = calendario.get(Calendar.MONTH);
        int ano = calendario.get(Calendar.YEAR);

        String data = ano + "-" + (mes + 1) + "-" + dia;
        //String data = ano + "-" + (mes + 1) + "-" + dia;

        return data;

    }

    public String getReferencia() {
        return controllerFactura.getReferenciaFactura(Integer.parseInt(jLabel4.getText()));
    }

    public void salvarFactura() {
        factura.setCodigoCliente(getCodigoCliente());
        factura.setCodigoUtilizador(getCodigoUtilizador());
        factura.setDesconto(getTotalDesconto());
        factura.setTotalFactura(totalGeral());
        factura.setNomeCliente(jLabelNome.getText());
        factura.setQuantidadeItens(getQuantidadeGeral());
        factura.setValorApagar(getValorApagar());
        factura.setDescontoIVA(getDescontoIVA());
        factura.setCodigoFormaPagamento(8);
        //   factura.setnRef(getReferencia());
        if (jRadioButton1.isSelected()) {
            factura.setEstado("Retificação");
        }
        if (jRadioButton2.isSelected()) {
            factura.setEstado("Anulação");
        }

        factura.setnEcomenda(jTextField2.getText());
        controllerNotas.salvar(factura, jLabel4.getText());

    }

    public void salvarItemFacturaNota() {
        for (int i = 0; i < jTable2.getRowCount(); i++) {
            int codigoFactura = controllerNotas.getLastNota();
            int codigoProduto = Integer.parseInt(jTable2.getValueAt(i, 0).toString());
            int codigoCategoria = controllerServico.getCodigoCategoriaServico(codigoProduto);
            int quantidade = Integer.parseInt(jTable2.getValueAt(i, 2).toString());
            double valorUnitario = Double.parseDouble(jTable2.getValueAt(i, 3).toString());
            int codigoTaxa = controllerServico.getCodigoTaxa(codigoProduto);
            if (codigoTaxa == 14) {
                facturaItens.setDescontoIVA(valorUnitario * 0.14);
            } else {

                facturaItens.setDescontoIVA(valorUnitario * 0);
            }
            facturaItens.setTotalGeral(valorUnitario);
            facturaItens.setCodigoFactura(codigoFactura);
            facturaItens.setCodigoServico(codigoProduto);
            facturaItens.setQuantidade(quantidade);
            facturaItens.setSubTotal(valorUnitario - (facturaItens.getDescontoIVA()));
            controllerNotasItens.salvar(facturaItens);

        }

    }

    public void salvarItemFactura() {
        String codigoFactura = jComboBox2.getSelectedItem().toString();
        if (jRadioButton1.isSelected()) {
            for (int i = 0; i < jTable2.getRowCount(); i++) {
                int codigoProduto = Integer.parseInt(jTable2.getValueAt(i, 0).toString());
                controllerFacturaItens.desativarProduto(codigoFactura, codigoProduto);

            }
        } else {
            for (int i = 0; i < jTable2.getRowCount(); i++) {
                int codigoProduto = Integer.parseInt(jTable2.getValueAt(i, 0).toString());
                controllerFacturaItens.desativarProduto(codigoFactura, codigoProduto);
            }
            controllerFacturaItens.desativarFactura(codigoFactura);

        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NotaView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NotaView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NotaView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NotaView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new NotaView().setVisible(true);
//            }
//        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabelNome;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton5;
    private javax.swing.JRadioButton jRadioButton6;
    private javax.swing.JRadioButton jRadioButton7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextFieldDesconto;
    private javax.swing.JTextField jTextFieldTotaPagar;
    // End of variables declaration//GEN-END:variables

    public final void mostrarFactura(String sql) {
        System.out.println("Teste:" + sql);
        try {
            con = new ConexaoBancos().ConexaoBD();
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(50);
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(150);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(80);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(80);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
            jTable1.getTableHeader().setReorderingAllowed(false);
            jTable1.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
            jTable1.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
            model.setNumRows(0);
            while (rs.next()) {
                model.addRow(new String[]{rs.getString("idServico"), rs.getString("designacao"), rs.getString("quantidade"),
                    rs.getString("preco")

                });
            }
        } catch (SQLException ex) {
            System.out.println("Erro!!!" + ex);
        }

    }

    public void inserirTabela() {
        Object fila[] = new Object[6];
        double preco = 0.0;
        String IVA = null;
        double totalPreco = 0.0;
        // Gestão Hospitalar
        int quantidade = Integer.parseInt(jTable1.getValueAt(jTable1.getSelectedRow(), 2).toString());
        int codigoServico = Integer.parseInt(jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString());
        System.out.println("Produto:" + codigoServico);
        if (tipoCodigoArea == 1) {
            //   codigoServico = Integer.parseInt(jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString());
            int codigoTaxa = controllerServico.getCodigoTaxa(codigoServico);
            if (codigoTaxa == 14) {
                fila[0] = codigoServico;
                IVA = "14%";
                preco = preco + Double.parseDouble(jTable1.getValueAt(jTable1.getSelectedRow(), 3).toString());
                totalPreco = preco * quantidade;

            } else {
                fila[0] = codigoServico;
                IVA = "0%";
                preco = preco + Double.parseDouble(jTable1.getValueAt(jTable1.getSelectedRow(), 3).toString());
                totalPreco = preco * quantidade;

            }

        }
        // Gestão de Stock
        if (tipoCodigoArea == 2) {
            IVA = "14%";
            preco = preco + Double.parseDouble(jTable1.getValueAt(jTable1.getSelectedRow(), 3).toString());
            fila[0] = codigoServico;
        }
        fila[0] = codigoServico;
        fila[1] = jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString();
        fila[2] = quantidade;
        fila[3] = preco;
        fila[4] = IVA;
        fila[5] = totalPreco;
        defaultTableModel.addRow(fila);
        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
        jTable2.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTable2.getColumnModel().getColumn(0).setResizable(false);
        jTable2.getColumnModel().getColumn(1).setPreferredWidth(100);
        jTable2.getColumnModel().getColumn(1).setResizable(!false);
        jTable2.getColumnModel().getColumn(2).setPreferredWidth(50);
        jTable2.getColumnModel().getColumn(2).setResizable(false);
        jTable2.getColumnModel().getColumn(3).setPreferredWidth(100);
        jTable2.getColumnModel().getColumn(3).setResizable(!false);
        jTable2.getColumnModel().getColumn(4).setPreferredWidth(100);
        jTable2.getColumnModel().getColumn(4).setResizable(false);
        jTable2.getColumnModel().getColumn(5).setPreferredWidth(100);
        jTable2.getColumnModel().getColumn(5).setResizable(false);
        jTable2.getTableHeader().setReorderingAllowed(false);
        jTable2.setAutoResizeMode(jTable2.AUTO_RESIZE_OFF);
        actualizarValorIva();
        actualizarValorApagar();
        actualizar();

    }

    public void actualizarValorApagar() {

        double valor, valorTotal = 0;
        double valorIVA = 0;
        double troco = 0;
        if (tipoCodigoArea == 1) {
            for (int i = 0; i < jTable2.getRowCount(); i++) {
                int codigoServico = Integer.parseInt(jTable2.getValueAt(i, 0).toString());
                int codigoTaxa = controllerServico.getCodigoTaxa(codigoServico);
                if (codigoTaxa == 14) {
                    valor = Double.valueOf(jTable2.getValueAt(i, 3).toString()) + Double.valueOf(jTable2.getValueAt(i, 5).toString()) * 0.14;
                    valorTotal = valorTotal + valor;
                    jTextFieldTotaPagar.setText(String.valueOf(valorTotal));

                } else {
                    valor = Double.valueOf(jTable2.getValueAt(i, 3).toString());
                    valorTotal = valorTotal + valor;
                    System.out.println("Total:" + valorTotal);
                    jTextFieldTotaPagar.setText(String.valueOf(valorTotal));

                }

            }
        }
        if (tipoCodigoArea == 2) {
            for (int i = 0; i < jTable2.getRowCount(); i++) {
                valor = Double.valueOf(jTable2.getValueAt(i, 5).toString()) + Double.valueOf(jTable2.getValueAt(i, 5).toString()) * 0.14;
                valorTotal = valorTotal + valor;
                System.out.println("Total:" + valorTotal);
                jTextFieldTotaPagar.setText(String.valueOf(valorTotal));

            }
        }

    }

    public void actualizarValorIva() {

        double valor, valorTotal = 0;
        String troco = null;
        if (tipoCodigoArea == 2) {
            int codigoServico = controllerServico.getCodigoServico(jTable2.getValueAt(jTable2.getSelectedRow(), 1).toString());
            int codigoTaxa = controllerServico.getCodigoTaxa(codigoServico);
            for (int i = 0; i < jTable2.getRowCount(); i++) {
                valor = Double.valueOf(jTable2.getValueAt(i, 3).toString());
                valorTotal = valorTotal + valor;
                jTextFieldDesconto.setText(String.valueOf(valorTotal * 0.14));
                //  troco = String.valueOf(getDesconto());
            }
        }
        if (tipoCodigoArea == 1) {
            if (jTable2.getRowCount() != 0) {
                for (int i = 0; i < jTable2.getRowCount(); i++) {
                    int codigoServico = Integer.parseInt(jTable2.getValueAt(i, 0).toString());
                    int quantidade = Integer.parseInt(jTable2.getValueAt(i, 2).toString());
                    int codigoTaxa = controllerServico.getCodigoTaxa(codigoServico);
                    if (codigoTaxa == 14) {
                        valor = Double.valueOf(jTable2.getValueAt(i, 3).toString()) * 14 * quantidade;
                        valorTotal = valorTotal + valor;
                        jTextFieldDesconto.setText(String.valueOf(valorTotal / 100));

                    } else {
                        jTextFieldDesconto.setText("0.0");

                    }
                }

            } else {
            }
        }

    }

    public void actualizar() {
        if (tipoCodigoArea == 1) {
//            System.out.println("desconto" + totalDesconto());
            BigDecimal res2 = new BigDecimal((totalGeral()));
            // BigDecimal res2 = new BigDecimal((totalGeral() - totalDesconto()));
            jTextFieldTotaPagar.setText("" + res2.setScale(2, BigDecimal.ROUND_HALF_UP));
            actualizarValorIva();
        }
        if (tipoCodigoArea == 2) {
//            System.out.println("desconto" + totalDesconto());
            BigDecimal res2 = new BigDecimal((totalGeral()));
            jTextFieldTotaPagar.setText("" + res2.setScale(2, BigDecimal.ROUND_HALF_UP));
//       
        }
    }

    public double totalGeral() {
        double total = 0, d = 0, d1 = 0;
        if (tipoCodigoArea == 1) {
            for (int i = 0; i < jTable2.getRowCount(); i++) {
                // int codigoServico = controllerServico.getCodigoServico(jComboBox3.getSelectedItem().toString());
                int codigoServico = Integer.parseInt(jTable2.getValueAt(i, 0).toString());
                int quantidade = Integer.parseInt(jTable2.getValueAt(i, 2).toString());
//                System.out.println("Codigo Servico:" + codigoServico);
                int codigoTaxa = controllerServico.getCodigoTaxa(codigoServico);
                if (codigoTaxa == 14) {
                    d = Double.parseDouble(String.valueOf(jTable2.getValueAt(i, 3))) * quantidade + Double.parseDouble(String.valueOf(jTable2.getValueAt(i, 3))) * quantidade * 0.14;
                    total += d;
                } else {
                    d = Double.parseDouble(String.valueOf(jTable2.getValueAt(i, 3))) * quantidade;
                    total = total + d;
                }

            }
        }
        if (tipoCodigoArea == 2) {
            for (int i = 0; i < jTable2.getRowCount(); i++) {
                d = Double.parseDouble(String.valueOf(jTable2.getValueAt(i, 5))) + Double.parseDouble(String.valueOf(jTable2.getValueAt(i, 5))) * 0.14;
                total += d;
            }
        }
//        System.out.println("TOTAL GERAL:" + total);
        return total;

    }
}
