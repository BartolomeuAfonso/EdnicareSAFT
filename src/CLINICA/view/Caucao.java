/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package CLINICA.view;

import CLINICA.controller.ControllerUtente;
import CLINICA.controller.ControllerServico;
import CLINICA.controller.ControllerUsuario;
import CLINICA.controller.ControllerFormaPagamento;
import CLINICA.controller.ControllerFactura;
import CLINICA.controller.ControllerFacturaItens;
import CLINICA.controller.ControllerEmpresa;
import CLINICA.controller.ControllerMedico;
import CLINICA.controller.ControllerParametros;
import CLINICA.modelo.Factura;
import CLINICA.modelo.FacturaItens;
import CLINICA.relatorios.RelatorioVenda;
import GestaoStock.controller.EntradaController;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.io.UnsupportedEncodingException;
import java.math.BigDecimal;
import java.net.URL;
import java.security.NoSuchAlgorithmException;
import java.sql.Connection;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import sf.ce.conexao.ConexaoBancos;
import sf.ce.utilizacoes.Data;

/**
 *
 * @author Desenvolvimento
 */
public class Caucao extends javax.swing.JFrame {

    /**
     * Creates new form Tesouraria
     */
    private DefaultTableModel defaultTableModel;
    Factura factura = new Factura();
    FacturaItens facturaItens = new FacturaItens();
    private DecimalFormat decimalformat;
    ControllerUsuario controllerUsuario;
    ControllerMedico controllerMedico;
    ControllerFormaPagamento formaPagamento;
    ControllerServico controllerServico;
    ControllerFactura controllerFactura;
    ControllerFacturaItens controllerFacturaItens;
    Data d = new Data();
    ControllerEmpresa controllerEmpresa;
    RelatorioVenda relatorioVenda = new RelatorioVenda();
    double totalApagar = 0;
    int user;
    double valorUnitario = 0;
    Connection con;
    private ControllerUtente utentes = new ControllerUtente(con);
    EntradaController control = new EntradaController();
    ControllerParametros controllerParametros;
    
    public Caucao(int codigo) {
        initComponents();
        this.user = codigo;
        con = new ConexaoBancos().ConexaoBD();
        controllerFactura = new ControllerFactura(con);
        controllerFacturaItens = new ControllerFacturaItens(con);
        controllerEmpresa = new ControllerEmpresa(con);
        controllerParametros = new ControllerParametros(con);
        formaPagamento = new ControllerFormaPagamento(con);
        controllerUsuario = new ControllerUsuario(con);
        controllerServico = new ControllerServico(con);
        controllerMedico = new ControllerMedico(con);
        jComboBox5.setModel(new DefaultComboBoxModel(utentes.getNomeBenefiarioUltimoParticular().toArray()));
        int codigoCliente = utentes.getCodigoUtente(jComboBox5.getSelectedItem().toString());
        jComboBox1.setModel(new DefaultComboBoxModel(controllerUsuario.getNomeporCodigo(user).toArray()));
        jComboBox2.setModel(new DefaultComboBoxModel(formaPagamento.getDesignacaoFormaPagamento().toArray()));
        jComboBox3.setModel(new DefaultComboBoxModel(controllerServico.getNomeCaucao().toArray()));
        jComboBox4.setModel(new DefaultComboBoxModel(controllerMedico.getNomeMedico().toArray()));
        defaultTableModel = (DefaultTableModel) jTable1.getModel();
        addKeyListener(new LeitorTeclas());
        jLabel9.setVisible(false);
        jTextPreco1.setVisible(false);
        
        teclaInser();
        teclaInserPreco();
        teclaInserfactura();
        teclaInserQuantidade();
        teclaImprimirMulticaixa();
        teclaImprimirNumerario();
        setLocationRelativeTo(null);
        iconeSistema();
    }
    
    public final void iconeSistema() {
        // URL caminho = this.getClass().getResource("/meus icons/GRest.png");
        URL caminho = this.getClass().getResource("/sf/ce/imagens/Icons/logoteste2.jpg");
        Image iconeTitulo = Toolkit.getDefaultToolkit().getImage(caminho);
        this.setIconImage(iconeTitulo);
    }

//    public void setDesconto(String nome) {
//        jTextFieldDesconto.setText(String.valueOf(utentes.getDescontoUtente(nome)));
//    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCalendarTheme1 = new com.toedter.plaf.JCalendarTheme();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel13 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jPanel14 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jPanel9 = new javax.swing.JPanel();
        jTextFieldTotaPagar = new javax.swing.JTextField();
        jPanel10 = new javax.swing.JPanel();
        jTextFieldValorEntregue = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jPanel16 = new javax.swing.JPanel();
        jTextFieldMulticaixa = new javax.swing.JTextField();
        jRadioButton1 = new javax.swing.JRadioButton();
        jLabel9 = new javax.swing.JLabel();
        jTextPreco1 = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        jRadioButton5 = new javax.swing.JRadioButton();
        jRadioButton6 = new javax.swing.JRadioButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextPreco = new javax.swing.JTextField();
        jComboBox3 = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jComboBox5 = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jPanel12 = new javax.swing.JPanel();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jComboBox4 = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("CAUÇÃO - REGISTO DE PAGAMENTO");
        setResizable(false);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 153)), "Produtos selecionados na venda", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Century Gothic", 1, 12), new java.awt.Color(0, 102, 153))); // NOI18N
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item", "Artigo", "Quantidade", "Preço Unitário", "Valor a Pagar"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable1KeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setHeaderValue("Item");
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setHeaderValue("Artigo");
            jTable1.getColumnModel().getColumn(2).setHeaderValue("Quantidade");
            jTable1.getColumnModel().getColumn(3).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setHeaderValue("Preço Unitário");
            jTable1.getColumnModel().getColumn(4).setHeaderValue("Valor a Pagar");
        }

        jPanel4.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 1040, 200));

        jPanel13.setBackground(new java.awt.Color(153, 153, 153));
        jPanel13.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel8.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N
        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sf/ce/imagens/Icons/icons8-cancel-filled-32.png"))); // NOI18N
        jLabel8.setText(" Remover Serviço");
        jLabel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel8MousePressed(evt);
            }
        });
        jPanel13.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 0, 151, -1));

        jPanel4.add(jPanel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 275, 1050, 30));

        jPanel14.setBackground(new java.awt.Color(153, 153, 153));
        jPanel14.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel10.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N
        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sf/ce/imagens/Icons/icons8-cancel-filled-32.png"))); // NOI18N
        jLabel10.setText(" Remover Serviço");
        jLabel10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel10MousePressed(evt);
            }
        });
        jPanel14.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 0, 151, -1));

        jPanel4.add(jPanel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 225, 1030, 30));

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 153)), "Recepcionista", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Century Gothic", 1, 11))); // NOI18N

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(40, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 153)), "Total a Pagar", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Century Gothic", 1, 11), new java.awt.Color(204, 0, 0))); // NOI18N

        jTextFieldTotaPagar.setEditable(false);
        jTextFieldTotaPagar.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jTextFieldTotaPagar.setForeground(new java.awt.Color(204, 0, 0));
        jTextFieldTotaPagar.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldTotaPagar.setText("0");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTextFieldTotaPagar, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addComponent(jTextFieldTotaPagar, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 153)), "Valor entregue Númerario", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Century Gothic", 1, 11))); // NOI18N

        jTextFieldValorEntregue.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jTextFieldValorEntregue.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldValorEntregue.setText("0");
        jTextFieldValorEntregue.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextFieldValorEntregueCaretUpdate(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTextFieldValorEntregue, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE)
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addComponent(jTextFieldValorEntregue, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton5.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sf/ce/imagens/Icons/icons8-save-32 (1).png"))); // NOI18N
        jButton5.setText("Salvar F(5)");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jPanel16.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 153)), "Valor entregue Multicaixa", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Century Gothic", 1, 11))); // NOI18N

        jTextFieldMulticaixa.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jTextFieldMulticaixa.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldMulticaixa.setText("0");
        jTextFieldMulticaixa.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextFieldMulticaixaCaretUpdate(evt);
            }
        });

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextFieldMulticaixa, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addComponent(jTextFieldMulticaixa, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jRadioButton1.setFont(new java.awt.Font("Century Gothic", 1, 11)); // NOI18N
        jRadioButton1.setText("Registo de Pagamento");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Century Gothic", 1, 11)); // NOI18N
        jLabel9.setText("Referente a Factura nº:");
        jLabel9.setOpaque(true);

        jTextPreco1.setFont(new java.awt.Font("Century Gothic", 1, 11)); // NOI18N
        jTextPreco1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextPreco1.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextPreco1CaretUpdate(evt);
            }
        });
        jTextPreco1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextPreco1KeyPressed(evt);
            }
        });

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 153)), "Tipo de Papel", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Century Gothic", 1, 11))); // NOI18N

        buttonGroup1.add(jRadioButton5);
        jRadioButton5.setFont(new java.awt.Font("Century Gothic", 1, 11)); // NOI18N
        jRadioButton5.setText("A5");

        buttonGroup1.add(jRadioButton6);
        jRadioButton6.setFont(new java.awt.Font("Century Gothic", 1, 11)); // NOI18N
        jRadioButton6.setSelected(true);
        jRadioButton6.setText("Ticket");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jRadioButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jRadioButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(148, 148, 148))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton5)
                    .addComponent(jRadioButton6))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 153)), "Escolha o Serviço", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Century Gothic", 1, 12), new java.awt.Color(0, 102, 153))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Century Gothic", 1, 11)); // NOI18N
        jLabel1.setText("Por código");

        jTextField3.setFont(new java.awt.Font("Century Gothic", 1, 11)); // NOI18N
        jTextField3.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField3.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField3CaretUpdate(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Century Gothic", 1, 11)); // NOI18N
        jLabel2.setText("Designação:");

        jLabel4.setFont(new java.awt.Font("Century Gothic", 1, 11)); // NOI18N
        jLabel4.setText("Preço");

        jTextPreco.setFont(new java.awt.Font("Century Gothic", 1, 11)); // NOI18N
        jTextPreco.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextPreco.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextPrecoCaretUpdate(evt);
            }
        });
        jTextPreco.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextPrecoKeyPressed(evt);
            }
        });

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel5.setFont(new java.awt.Font("Century Gothic", 1, 11)); // NOI18N
        jLabel5.setText("Forma de Pagamento");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Century Gothic", 1, 11)); // NOI18N
        jLabel6.setText("Filtrar o nome:");

        jTextField4.setFont(new java.awt.Font("Century Gothic", 1, 11)); // NOI18N
        jTextField4.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField4.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField4CaretUpdate(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Century Gothic", 1, 11)); // NOI18N
        jLabel7.setText("Qtde.");

        jTextField6.setFont(new java.awt.Font("Century Gothic", 1, 11)); // NOI18N
        jTextField6.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField6.setText("1");
        jTextField6.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField6CaretUpdate(evt);
            }
        });
        jTextField6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField6KeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(194, 194, 194))
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jTextPreco))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTextPreco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel7)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(1, 1, 1))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel2)
                                .addComponent(jLabel6))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 21, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 153)), "Utente", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Century Gothic", 1, 12), new java.awt.Color(0, 102, 153))); // NOI18N
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTextField1.setFont(new java.awt.Font("Century Gothic", 1, 11)); // NOI18N
        jTextField1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField1.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1CaretUpdate(evt);
            }
        });
        jPanel2.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 90, -1));

        jLabel11.setFont(new java.awt.Font("Century Gothic", 1, 11)); // NOI18N
        jLabel11.setText("Por código");
        jPanel2.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 70, -1));

        jLabel12.setFont(new java.awt.Font("Century Gothic", 1, 11)); // NOI18N
        jLabel12.setText("Nome do(a) Cliente Cadastrado :");
        jPanel2.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 10, 230, 20));

        jComboBox5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox5ActionPerformed(evt);
            }
        });
        jPanel2.add(jComboBox5, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 30, 320, 30));

        jLabel13.setFont(new java.awt.Font("Century Gothic", 1, 11)); // NOI18N
        jLabel13.setText("Filtrar o nome do(a) Cliente:");
        jPanel2.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 10, 160, -1));

        jTextField2.setFont(new java.awt.Font("Century Gothic", 1, 11)); // NOI18N
        jTextField2.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField2.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField2CaretUpdate(evt);
            }
        });
        jPanel2.add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 30, 210, -1));

        jPanel12.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 153)));

        jButton8.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N
        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sf/ce/imagens/Icons/icons8-cash-register-32.png"))); // NOI18N
        jButton8.setText("Fecho ");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N
        jButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sf/ce/imagens/Icons/icons8-invoice-filled-32.png"))); // NOI18N
        jButton9.setText("Re-imprimir ");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton9)
                .addGap(20, 20, 20))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 153)), "Médico em Serviço", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Century Gothic", 1, 11))); // NOI18N

        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jComboBox4, 0, 258, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 777, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jRadioButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextPreco1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jButton5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jRadioButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel9)
                        .addComponent(jTextPreco1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton5))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(5, 5, 5))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        new Reemprimir(getCodigoUtilizador()).setVisible(true);
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jTextPrecoCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextPrecoCaretUpdate
        calculoTotal();
    }//GEN-LAST:event_jTextPrecoCaretUpdate

    private void jTextPrecoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextPrecoKeyPressed

    }//GEN-LAST:event_jTextPrecoKeyPressed

    private void jLabel8MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel8MousePressed
        int linha = jTable1.getSelectedRow();
        if (linha != -1) {
            defaultTableModel.removeRow(jTable1.getSelectedRow());
//            jTextFieldTotaPagar.setText("" + decimalformat.format(totalGeral()));
//            troco();
            calculoTroco();
            actualizar();
            actualizarValorApagar();
        } else {
            JOptionPane.showMessageDialog(rootPane, "Selecione um produto na tabela!");
        }
    }//GEN-LAST:event_jLabel8MousePressed

    private void jTextFieldValorEntregueCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextFieldValorEntregueCaretUpdate
        calculoTroco();
    }//GEN-LAST:event_jTextFieldValorEntregueCaretUpdate

    private void jComboBox5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox5ActionPerformed
//        int codigoCliente = utentes.getCodigoUtente(jComboBox5.getSelectedItem().toString());
//        jComboBox3.setModel(new DefaultComboBoxModel(controllerServico.getServico(codigoCliente).toArray()));
//        String desconto = "" + utentes.getDescontoUtente(jComboBox5.getSelectedItem().toString());
//        jTextFieldDesconto.setText(desconto);
//        this.setDesconto(jComboBox5.getSelectedItem().toString());
//        double preco = controllerServico.getCodigoServico(jComboBox3.getSelectedItem().toString());
//        actualizar();

    }//GEN-LAST:event_jComboBox5ActionPerformed
    
    public final void teclaInser() {
        jTextField4.addKeyListener(
                new KeyAdapter() {
            public void keyReleased(KeyEvent evt) {
                if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
                    if (!jTextPreco.getText().isEmpty()) {
                        inserirTabela();
                    } else {
                        JOptionPane.showMessageDialog(null, "Preço se encontra vázio");
                    }
                }
            }
            
        });
    }
    
    public final void teclaInserPreco() {
        jTextPreco.addKeyListener(
                new KeyAdapter() {
            public void keyReleased(KeyEvent evt) {
                if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
                    if (!jTextPreco.getText().isEmpty()) {
                        inserirTabela();
                    } else {
                        JOptionPane.showMessageDialog(null, "Preço se encontra vázio");
                    }
                    
                }
            }
            
        });
    }
    
    public final void teclaInserfactura() {
        jTextPreco1.addKeyListener(
                new KeyAdapter() {
            public void keyReleased(KeyEvent evt) {
                if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
                    if (!jTextPreco1.getText().isEmpty()) {
                        inserirTabela();
                    } else {
                        JOptionPane.showMessageDialog(null, "Preço se encontra vázio");
                    }
                    
                }
            }
            
        });
    }
    
    public final void teclaImprimirNumerario() {
        jTextFieldValorEntregue.addKeyListener(
                new KeyAdapter() {
            public void keyReleased(KeyEvent evt) {
                if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
                    if (getValorEntregue() + getValorEntregueMulticaixa() >= getValorApagar()) {
                        salvarFactura();
                        salvarItemFactura();
                        int codigoFactura = controllerFactura.getLastFactura();
                        limparVenda();
                        if (jRadioButton1.isSelected()) {
                            String servico = jComboBox3.getSelectedItem().toString() + " " + jLabel9.getText() + " " + jTextPreco1.getText();
                            relatorioVenda.getFacturaCaucao1(codigoFactura, valorUnitario, servico);
                        } else {
                            relatorioVenda.getFacturaCaucao(codigoFactura, valorUnitario);
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "Valor Entregue deve Maior que o valor Total!", "Erro", JOptionPane.ERROR_MESSAGE);
                    }
                }
            }
            
        });
    }
    
    public final void teclaImprimirMulticaixa() {
        jTextFieldValorEntregue.addKeyListener(
                new KeyAdapter() {
            public void keyReleased(KeyEvent evt) {
                if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
                    if (getValorEntregue() + getValorEntregueMulticaixa() >= getValorApagar()) {
                        salvarFactura();
                        salvarItemFactura();
                        int codigoFactura = controllerFactura.getLastFactura();
                        limparVenda();
                        if (jRadioButton1.isSelected()) {
                            String servico = jComboBox3.getSelectedItem().toString() + " " + jLabel9.getText() + " " + jTextPreco1.getText();
                            relatorioVenda.getFacturaCaucao1(codigoFactura, valorUnitario, servico);
                        } else {
                            relatorioVenda.getFacturaCaucao(codigoFactura, valorUnitario);
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "Valor Entregue deve Maior que o valor Total!", "Erro", JOptionPane.ERROR_MESSAGE);
                    }
                }
            }
            
        });
    }
    
    public final void teclaInserQuantidade() {
        jTextField6.addKeyListener(
                new KeyAdapter() {
            public void keyReleased(KeyEvent evt) {
                if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
                    inserirTabela();
                }
            }
            
        });
    }
    
    public void actualizar() {
//        System.out.println("desconto" + totalDesconto());
//        jTextFieldTotaPagar.setText("" + decimalformat.format(totalGeral() - totalDesconto()));
//        jLabel7.setText("" + decimalformat.format(jTable1.getRowCount()));

        //    BigDecimal res2 = new BigDecimal((totalGeral() - totalDesconto()));
        //   jTextFieldTotaPagar.setText("" + res2.setScale(2, BigDecimal.ROUND_HALF_UP));
//        jLabel7.setText("" + (jTable1.getRowCount()));
        calculoTroco();
    }
    
    public void calculoTroco() {
//        double total_antes = removerPattern(jTextFieldTotaPagar.getText());
        double total_antes = Double.parseDouble(jTextFieldTotaPagar.getText());
        double entregue_antes = 0;
        double entregue = total_antes;
        double troco = 0;
        if (jTextFieldValorEntregue.getText() == "0") {
            troco = -(total_antes);
        } else {
            if (jTextFieldValorEntregue.getText().isEmpty()) {
                entregue_antes = 0;
            } else {
                entregue_antes = Double.parseDouble(jTextFieldValorEntregue.getText());
            }
            troco = entregue_antes - total_antes;
        }

//        jTextFieldTroco.setText(decimalformat.format(troco));
        BigDecimal res2 = new BigDecimal(troco);
        //    jTextFieldTroco.setText("" + res2.setScale(2, BigDecimal.ROUND_HALF_UP));

    }
    
    public double totalGeral() {
        double total = 0, d = 0;
        for (int i = 0; i < jTable1.getRowCount(); i++) {
//            d = removerPattern(String.valueOf(jTable1.getValueAt(i, 5)));
            d = Double.parseDouble(String.valueOf(jTable1.getValueAt(i, 4)));
            total += d;
        }
        return total;
    }

//    public double totalDesconto() {
//        double desc = 0, d = 0;
//        String letra = jTextFieldDesconto.getText().substring(0, 2);
//        double desconto = Double.valueOf(letra);
//        desc = (totalGeral() * desconto) / 100;
//
//        return desc;
//    }
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        if (getValorEntregue() + getValorEntregueMulticaixa() >= getValorApagar()) {
            salvarFactura();
            salvarItemFactura();
            limparVenda();
            System.out.println("Teste dos valor:" + getValorApagar());
            int codigoFactura = controllerFactura.getLastFactura();
            if (jRadioButton5.isSelected()) {
                // Factura A5
                relatorioVenda.getFacturaCaucao(codigoFactura, valorUnitario);
                
            }
            if (jRadioButton6.isSelected()) {
                int quantidade = controllerParametros.getValorImpressao();
                for (int i = 0; i < quantidade; i++) {
                    relatorioVenda.getFacturaCaucaoTicket(codigoFactura, valorUnitario);
                }
//                String servico = jComboBox3.getSelectedItem().toString() + " " + jLabel9.getText() + " " + jTextPreco1.getText();
//                relatorioVenda.getFacturaCaucao1(codigoFactura, valorUnitario, servico);
            }
            
        } else {
            JOptionPane.showMessageDialog(null, "Valor Entregue deve Maior que o valor Total!", "Erro", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_jButton5ActionPerformed

    private void jTextField1CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1CaretUpdate
        if (!jTextField1.getText().isEmpty()) {
            int codigo = Integer.parseInt(jTextField1.getText());
            jComboBox5.setModel(new DefaultComboBoxModel(utentes.getCodigo(codigo).toArray()));
        }
    }//GEN-LAST:event_jTextField1CaretUpdate

    private void jTextFieldMulticaixaCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextFieldMulticaixaCaretUpdate
//        troco();
    }//GEN-LAST:event_jTextFieldMulticaixaCaretUpdate

    private void jTextField3CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField3CaretUpdate
        if (!jTextField3.getText().isEmpty()) {
            int codigo = Integer.parseInt(jTextField3.getText());
            jComboBox3.setModel(new DefaultComboBoxModel(controllerServico.getNomeServicoporCodigo(codigo).toArray()));
        }
    }//GEN-LAST:event_jTextField3CaretUpdate

    private void jTextField4CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField4CaretUpdate
        if (!jTextField4.getText().isEmpty()) {
            jComboBox3.setModel(new DefaultComboBoxModel(controllerServico.getNomeServicosPorlike(jTextField4.getText()).toArray()));
        }
    }//GEN-LAST:event_jTextField4CaretUpdate

    private void jTextField2CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField2CaretUpdate
        if (!jTextField2.getText().isEmpty()) {
            jComboBox5.setModel(new DefaultComboBoxModel(utentes.getNomeBenefiarioBuscar(jTextField2.getText()).toArray()));
        }
    }//GEN-LAST:event_jTextField2CaretUpdate

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        new FechoConta().setVisible(true);
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jTable1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyPressed
        actualizar();
        actualizarValorApagar();
    }//GEN-LAST:event_jTable1KeyPressed

    private void jTextField6CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField6CaretUpdate
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField6CaretUpdate

    private void jTextField6KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField6KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField6KeyPressed

    private void jTextPreco1CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextPreco1CaretUpdate
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextPreco1CaretUpdate

    private void jTextPreco1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextPreco1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextPreco1KeyPressed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        if (jRadioButton1.isSelected()) {
            jLabel9.setVisible(true);
            jTextPreco1.setVisible(true);
            
        } else {
            jLabel9.setVisible(false);
            jTextPreco1.setVisible(false);
            
        }
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jLabel10MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel10MousePressed
        int linha = jTable1.getSelectedRow();
        if (linha != -1) {
            defaultTableModel.removeRow(jTable1.getSelectedRow());
//            troco();
            calculoTroco();
            actualizarValorApagar();
            actualizar();
            
        } else {
            JOptionPane.showMessageDialog(rootPane, "Selecione um produto na tabela!");
        }
    }//GEN-LAST:event_jLabel10MousePressed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        if (jComboBox2.getSelectedItem().equals("NUMERARIO")) {
            jTextFieldValorEntregue.setText(jTextFieldTotaPagar.getText());
            jTextFieldMulticaixa.setText("0.0");
            jTextFieldValorEntregue.setEnabled(true);
            jTextFieldMulticaixa.setEnabled(false);
        }
        if (jComboBox2.getSelectedItem().equals("MULTICAIXA")) {
            jTextFieldValorEntregue.setText("0.0");
            jTextFieldValorEntregue.setEnabled(false);
            jTextFieldMulticaixa.setText(jTextFieldTotaPagar.getText());
            jTextFieldMulticaixa.setEnabled(true);
            
        }
        if (jComboBox2.getSelectedItem().equals("TRANSFERENCIA BANCARIA")) {
            jTextFieldValorEntregue.setText("0.0");
            jTextFieldValorEntregue.setEnabled(false);
            jTextFieldMulticaixa.setText(jTextFieldTotaPagar.getText());
            jTextFieldMulticaixa.setEnabled(true);
        }
        if (jComboBox2.getSelectedItem().equals("PARCIAL")) {
            jTextFieldMulticaixa.setText("0.0");
            jTextFieldValorEntregue.setText("0.0");
            jTextFieldValorEntregue.setEnabled(true);
            jTextFieldMulticaixa.setEnabled(true);
        }
    }//GEN-LAST:event_jComboBox2ActionPerformed
    
    public void actualizarValorApagar() {
        double valorTotal = 0;
        double troco = 0;
        for (int i = 0; i < jTable1.getRowCount(); i++) {
            double valor = Double.valueOf(jTable1.getValueAt(i, 4).toString());
            valorTotal = valorTotal + valor;
            jTextFieldTotaPagar.setText(String.valueOf(valorTotal));
//            troco = Double.parseDouble(getTroco());
        }
        System.out.println("Valor Total:" + valorTotal);
        
    }

//    public double getDescontoPersentagem() {
//        double percet = 0;
//        try {
//            if (!jTextFieldDesconto.getText().equals("")) {
//                double desconto = Double.parseDouble(jTextFieldDesconto.getText());
//                if (desconto != 0) {
//                    desconto = (desconto / 100);
//                    percet = (double) (getValorApagar() * desconto);
//                }
//            }
//
//        } catch (NumberFormatException ex) {
//            ex.printStackTrace();
//        }
//
//        return percet;
//    }
    public double getValorApagar() {
        double valor = 0;
        try {
            if (!jTextFieldTotaPagar.getText().equals("")) {
                valor = Double.parseDouble(jTextFieldTotaPagar.getText());
            }
            
        } catch (NumberFormatException ex) {
            ex.printStackTrace();
        }
        return valor;
    }
    
    public double getValorEntregue() {
        double valor = 0;
        try {
            if (!jTextFieldValorEntregue.getText().equals("")) {
                valor = Double.parseDouble(jTextFieldValorEntregue.getText());
            }
        } catch (NumberFormatException ex) {
            ex.printStackTrace();
        }
        return valor;
    }
    
    public int getCodigoUtilizador() {
        return controllerUsuario.getCodigoUtilizador(jComboBox1.getSelectedItem().toString());
    }
    
    public int getCodigoFormaPagamento() {
        return formaPagamento.getCodigoFormaPagamento(jComboBox2.getSelectedItem().toString());
    }
    
    public int getCodigoCliente() {
        return utentes.getCodigoUtente(jComboBox5.getSelectedItem().toString());
    }
    
    public void inserirTabela() {
        Object fila[] = new Object[5];
        int codigoServico = controllerServico.getCodigoServico(jComboBox3.getSelectedItem().toString());
        double preco = Double.parseDouble(jTextPreco.getText());
        int quantidade = Integer.parseInt(jTextField6.getText());
        fila[0] = codigoServico;
        if (jRadioButton1.isSelected()) {
            fila[1] = jComboBox3.getSelectedItem().toString() + " " + jLabel9.getText() + " " + jTextPreco1.getText();
            
        } else {
            fila[1] = jComboBox3.getSelectedItem().toString();
            
        }
        fila[2] = quantidade;
        fila[3] = preco;
        fila[4] = preco * quantidade;
        defaultTableModel.addRow(fila);
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        jTable1.getColumnModel().getColumn(0).setPreferredWidth(70);
        jTable1.getColumnModel().getColumn(0).setResizable(false);
        jTable1.getColumnModel().getColumn(1).setPreferredWidth(300);
        jTable1.getColumnModel().getColumn(1).setResizable(!false);
        jTable1.getColumnModel().getColumn(2).setPreferredWidth(200);
        jTable1.getColumnModel().getColumn(2).setResizable(false);
        jTable1.getColumnModel().getColumn(3).setPreferredWidth(160);
        jTable1.getColumnModel().getColumn(3).setResizable(!false);
        jTable1.getColumnModel().getColumn(4).setPreferredWidth(310);
        jTable1.getColumnModel().getColumn(4).setResizable(false);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.setAutoResizeMode(jTable1.AUTO_RESIZE_OFF);
        actualizarValorApagar();
        actualizar();
    }
    
    public int getQuantidadeGeral() {
        int total = 0;
        for (int i = 0; i < jTable1.getRowCount(); i++) {
            int quant = Integer.parseInt((jTable1.getValueAt(i, 2).toString()));
            total = total + quant;
        }
        return total;
    }

//    public double getDesconto() {
//        double valor = 0;
//        try {
//            if (!jTextFieldDesconto.getText().equals("")) {
//                valor = Double.parseDouble(jTextFieldDesconto.getText());
//                System.out.println("Valor do Desconto:" + valor);
//            } else {
//                jTextFieldDesconto.setText("0");
//            }
//        } catch (NumberFormatException ex) {
//            ex.printStackTrace();
//        }
//        return valor;
//    }
    public double getValorEntregueMulticaixa() {
        double valor = 0;
        try {
            if (!jTextFieldMulticaixa.getText().equals("")) {
                valor = Double.parseDouble(jTextFieldMulticaixa.getText());
            }
        } catch (NumberFormatException ex) {
            ex.printStackTrace();
        }
        return valor;
    }

//    public void troco() {
//        try {
//            double troco = ((getValorEntregue() + getValorEntregueMulticaixa()) - (getValorApagar() - getDescontoPersentagem()));
//            jTextFieldTroco.setText("" + troco);
////            Extenso ext = new Extenso(new BigDecimal(getTotalApagar()));
////            lbExtenso.setText(ext.toString());
//        } catch (NumberFormatException ex) {
//        }
//    }
//    public String getTroco() {
//        try {
//            double troco = ((getValorEntregue() + getValorEntregueMulticaixa()) - (getValorApagar()));
//            jTextFieldTroco.setText("" + troco);
//        } catch (NumberFormatException ex) {
//        }
//        return "" + 0;
//    }
//    public double getTrocoReceber() {
//        double valor = 0;
//        try {
//            if (!jTextFieldTroco.getText().equals("")) {
//                valor = Double.parseDouble(jTextFieldTroco.getText());
//            }
//
//        } catch (NumberFormatException ex) {
//            ex.printStackTrace();
//        }
//        return valor;
//    }
    public void salvarFactura() {
        factura.setCodigoCliente(getCodigoCliente());
        factura.setCodigoFormaPagamento(getCodigoFormaPagamento());
        factura.setCodigoUtilizador(getCodigoUtilizador());
        factura.setTroco(0.0);
//        factura.setTroco(getTrocoReceber());
        factura.setDesconto(0.0);
//        factura.setDesconto(getDesconto());
        factura.setTotalFactura(totalGeral());
        factura.setNomeCliente(jComboBox5.getSelectedItem().toString());
        factura.setQuantidadeItens(getQuantidadeGeral());
        factura.setValorMulticaixa(getValorEntregueMulticaixa());
        factura.setValorNumerario(getValorEntregue());
        factura.setValorApagar(getValorApagar());
        factura.setnIBAN(jComboBox4.getSelectedItem().toString());
        factura.setVaorporExtenso("");
        factura.setCodigoSeguro(8);
      
        if (jRadioButton1.isSelected()) {
            factura.setEstado(jRadioButton1.getText() + " " + jLabel9.getText() + "" + jTextPreco1.getText());
        }
        factura.setEstado("FACTURA PRONTO");
        factura.setDescontoIVA(0.0);
        controllerFactura.salvar(factura);
        
    }
    
    public void salvarItemFactura() {
        for (int i = 0; i < jTable1.getRowCount(); i++) {
            int codigoFactura = controllerFactura.getLastFactura();
            System.out.println("Codigo da Factura:" + codigoFactura);
            int codigoProduto = Integer.parseInt(jTable1.getValueAt(i, 0).toString());
            int codigoCategoria = controllerServico.getCodigoCategoriaServico(codigoProduto);
            int quantidadde = Integer.parseInt(jTable1.getValueAt(i, 2).toString());
            valorUnitario = Double.parseDouble(jTable1.getValueAt(i, 3).toString());
            System.out.println("Teste:" + valorUnitario);
            facturaItens.setCodigoFactura(codigoFactura);
            facturaItens.setCodigoServico(codigoProduto);
            facturaItens.setCodigoCategoriaServico(codigoCategoria);
            facturaItens.setQuantidade(quantidadde);
            facturaItens.setDescontoProduto(0.0);
            facturaItens.setDescontoIVA(0.0);
              facturaItens.setPreco(valorUnitario);
            if (jComboBox2.getSelectedItem().equals("NUMERARIO")) {
                facturaItens.setTotalGeral(valorUnitario);
                facturaItens.setTotalTPA(0.0);
            } else {
                facturaItens.setTotalGeral(0.0);
                facturaItens.setTotalTPA(valorUnitario);
            }
            controllerFacturaItens.salvarItens(facturaItens);
            if (codigoCategoria > 12) {
                try {
                    control.diminuirEstoque(codigoProduto, quantidadde);
                } catch (NoSuchAlgorithmException | UnsupportedEncodingException ex) {
                    Logger.getLogger(Servico.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
        }
    }
    
    public void calculoTotal() {
        //  double antes = removerPattern(jTextField5.getText());
        // double valor_unitario = antes;
        double valor_unitario = 0;
        double qtd = 0;
        if (jTextPreco.getText().isEmpty()) {
            qtd = 1;
        } else {
            qtd = Double.parseDouble(jTextPreco.getText());
        }
        double total = qtd * valor_unitario;
        //  jTextField7.setText(decimalformat.format(total));
    }

//    public void calculoTroco() {
//        double total_antes = removerPattern(jTextFieldTotaPagar.getText());
//        double entregue_antes = 0;
//        double entregue = total_antes;
//        double troco = 0;
//        if (jTextFieldValorEntregue.getText() == "0") {
//            troco = -(total_antes);
//        } else {
//            if (jTextFieldValorEntregue.getText().isEmpty()) {
//                entregue_antes = 0;
//            } else {
//                entregue_antes = Double.parseDouble(jTextFieldValorEntregue.getText());
//            }
//            troco = entregue_antes - total_antes;
//        }
//
////        jTextFieldTroco.setText(decimalformat.format(troco));
//    }
//    public Double removerPattern(String valor_recebido) {
//        String valor = valor_recebido.replaceAll("\\.", "").replace(",", ".");
//        return Double.parseDouble(valor);
//    }
    public void limparVenda() {
        jTextFieldTotaPagar.setText("0");
        jTextFieldValorEntregue.setText("0");
//        jTextFieldTroco.setText("0");
        // jTextField1.setText("1");
        jTextField3.setText("");
//        jTextField7.setText("0");
        jTextPreco.setText("1");
        //    jTextField5.setText("0");
//        jLabel6.setText("0");
//        jLabel7.setText("0");
        defaultTableModel.setRowCount(0);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                    
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Caucao.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
            
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Caucao.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
            
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Caucao.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
            
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Caucao.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //  new Tesouraria().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private com.toedter.plaf.JCalendarTheme jCalendarTheme1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JComboBox<String> jComboBox4;
    private javax.swing.JComboBox<String> jComboBox5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton5;
    private javax.swing.JRadioButton jRadioButton6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextFieldMulticaixa;
    private javax.swing.JTextField jTextFieldTotaPagar;
    private javax.swing.JTextField jTextFieldValorEntregue;
    private javax.swing.JTextField jTextPreco;
    private javax.swing.JTextField jTextPreco1;
    // End of variables declaration//GEN-END:variables
private class LeitorTeclas implements KeyListener {
        
        public void keyPressed(KeyEvent arg0) {
            switch (arg0.getKeyCode()) {
                case (KeyEvent.VK_F5):
                    if (getValorEntregue() + getValorEntregueMulticaixa() >= getValorApagar()) {
                        salvarFactura();
                        salvarItemFactura();
                        limparVenda();
                        int codigoFactura = controllerFactura.getLastFactura();
                        
                        relatorioVenda.getFactura(codigoFactura);
                    } else {
                        JOptionPane.showMessageDialog(null, "Valor Entregue deve Maior que o valor Total!", "Erro", JOptionPane.ERROR_MESSAGE);
                    }
                    
                    break;
            }
            System.out.println("Código da tecla: " + arg0.getKeyCode());
        }
        
        @Override
        public void keyReleased(KeyEvent arg0) {
            
        }
        
        @Override
        public void keyTyped(KeyEvent arg0) {
            
        }
    }
    
}
