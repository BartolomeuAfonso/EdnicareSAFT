/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package CLINICA.view;

import CLINICA.controller.ControllerCids;
import CLINICA.controller.ControllerEmpresa;
import CLINICA.controller.ControllerMarcarcaoConsulta;
import CLINICA.controller.ControllerSeguradora;
import CLINICA.controller.ControllerServico;
import CLINICA.controller.ControllerUsuario;
import CLINICA.controller.ControllerUtente;
import CLINICA.modelo.MarcacaoConsulta;
import CLINICA.relatorios.RelatorioServicos;
import java.awt.Image;
import java.awt.Toolkit;
import java.net.URL;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;
import sf.ce.conexao.ConexaoBancos;
import sf.ce.utilizacoes.Data;

/**
 *
 * @author Probook
 */
public class ListaDoctor extends javax.swing.JFrame {

    /**
     * Creates new form ListaDoctor
     */
    Data d = new Data();
    ConexaoBancos conexao;
    PreparedStatement ps;
    ResultSet rs;
    Connection con;
    String paciente;
    ControllerUtente controllerBeneficiario;
    ControllerSeguradora controllerSeguradora;
    ControllerUsuario controllerUsuario;
    ControllerServico controllerServico;
    RelatorioServicos relatorioServicos = new RelatorioServicos();
    MarcacaoConsulta marcacaoConsulta = new MarcacaoConsulta();
    ControllerMarcarcaoConsulta controllerMarcarcaoConsulta;
    ControllerCids controllerCids = new ControllerCids(con);
    ControllerEmpresa controllerEmpresa;
    int especialiadade;
    String nomeempresa;
    int user;

    public ListaDoctor(String nome, int codigoEspecialidade, int codigoUser) {
        initComponents();
        this.user = codigoUser;
        this.especialiadade = codigoEspecialidade;
        this.paciente = nome;
        controllerEmpresa = new ControllerEmpresa(con);
        nomeempresa = controllerEmpresa.getNomeEmpresa();
        controllerUsuario = new ControllerUsuario(con);
        controllerBeneficiario = new ControllerUtente(con);
        controllerServico = new ControllerServico(con);
        controllerSeguradora = new ControllerSeguradora(con);
        controllerServico = new ControllerServico(con);
        controllerMarcarcaoConsulta = new ControllerMarcarcaoConsulta(con);
        jComboBox1.setModel(new DefaultComboBoxModel(controllerCids.getEstadoDoente().toArray()));
        if (especialiadade == 1) {
            mostrarDoctor("SELECT DISTINCT m.nomeCompleto AS nomeCompleto\n"
                    + ",s.designacao AS designacao FROM medicos m inner join especialidade_medico e\n"
                    + "on m.codigoEspecialidade =e.idEspecialidade , servicos s where s.codigoCategoria =1 and\n"
                    + "s.designacao like '%geral%' and idEspecialidade = 1 order by 1");
            setLocationRelativeTo(null);
        } else {
            mostrarDoctor("SELECT m.nomeCompleto, e.designacao FROM medicos m inner join especialidade_medico e\n"
                    + "on m.codigoEspecialidade =e.idEspecialidade where idEspecialidade <> 1 order by 1");
            setLocationRelativeTo(null);
        }
        iconeSistema();
    }

    public final void iconeSistema() {

        URL caminho = this.getClass().getResource("/sf/ce/imagens/Icons/logoteste2.jpg");
        Image iconeTitulo = Toolkit.getDefaultToolkit().getImage(caminho);
        this.setIconImage(iconeTitulo);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Estado do Paciente"));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jComboBox1, 0, 426, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 11, Short.MAX_VALUE))
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null}
            },
            new String [] {
                "Doctor", "Especialidade"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 402, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        salvarMarcar();
        JOptionPane.showMessageDialog(null, "Consulta enviado com sucesso na sala da Triagem!!!");
        hide();
    }//GEN-LAST:event_jTable1MouseClicked

    public int getCodigoUtente() {
        return controllerBeneficiario.getCodigoUtente(paciente);
    }

    public int getCodigoMedico() {
        String medico = jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString();
        return controllerUsuario.getCodigoMedico(medico);
    }

    public int getCodigoServico() {
        String consulta = jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString();
        return controllerServico.getCodigoServico(consulta);
    }

    public void salvarMarcar() {
        int codigoEstado = controllerCids.getCodigoEstado(jComboBox1.getSelectedItem().toString());
        int codigoSeguro = controllerBeneficiario.getCodigoSeguro(getCodigoUtente());
        double precoParticular = controllerServico.getPrecoParticular(jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString());
        double ensa = controllerServico.getPrecoAdvance(jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString());
        double saham = controllerServico.getPrecoSaham(jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString());
        double angolatelecom = controllerServico.getPrecoAngolaTelecom(jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString());
        double saudemais = controllerServico.getPrecoSaudemais(jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString());
        double unisaude = controllerServico.getPrecoUnisaude(jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString());
        double fidelidade = controllerServico.getPrecoFidelidade(jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString());
        double anst = controllerServico.getPrecoEmpresa(jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString());
        marcacaoConsulta.setCodigoUtlizador(user);
        marcacaoConsulta.setCodigoMedico(getCodigoMedico());
        marcacaoConsulta.setCodigoPaciente(getCodigoUtente());
        marcacaoConsulta.setCodigoServico(getCodigoServico());
        marcacaoConsulta.setCodigoEstado(codigoEstado);
        marcacaoConsulta.setEstado(jComboBox1.getSelectedItem().toString());
        if (codigoSeguro == 8 || codigoSeguro == 19) {
            marcacaoConsulta.setPreco(precoParticular);
            controllerMarcarcaoConsulta.salvarRapida(marcacaoConsulta);
        }
        if (codigoSeguro == 1 || codigoSeguro == 2 || codigoSeguro == 3 || codigoSeguro == 4 || codigoSeguro == 5 || codigoSeguro == 6 || codigoSeguro == 7 || codigoSeguro == 15) {
            marcacaoConsulta.setPreco(ensa);
            controllerMarcarcaoConsulta.salvarRapida(marcacaoConsulta);
        }
        if (codigoSeguro == 9) {
            marcacaoConsulta.setPreco(angolatelecom);
            controllerMarcarcaoConsulta.salvarRapida(marcacaoConsulta);
        }
        if (codigoSeguro == 10) {
            marcacaoConsulta.setPreco(anst);
            controllerMarcarcaoConsulta.salvarRapida(marcacaoConsulta);
        }
        if (codigoSeguro == 11) {
            marcacaoConsulta.setPreco(saham);
            controllerMarcarcaoConsulta.salvarRapida(marcacaoConsulta);
        }
        if (codigoSeguro == 12) {
            marcacaoConsulta.setPreco(unisaude);
            controllerMarcarcaoConsulta.salvarRapida(marcacaoConsulta);
        }
        if (codigoSeguro == 13) {
            marcacaoConsulta.setPreco(saudemais);
            controllerMarcarcaoConsulta.salvarRapida(marcacaoConsulta);
        }
        if (codigoSeguro == 14) {
            marcacaoConsulta.setPreco(fidelidade);
            controllerMarcarcaoConsulta.salvarRapida(marcacaoConsulta);
        }
        if (codigoSeguro == 16) {
            marcacaoConsulta.setPreco(anst);
            controllerMarcarcaoConsulta.salvarRapida(marcacaoConsulta);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListaDoctor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListaDoctor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListaDoctor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListaDoctor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                // new ListaDoctor("Eng. Bartolomeu Afonso").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

    public final void mostrarDoctor(String sql) {
        System.out.println("Teste:" + sql);
        try {
            con = new ConexaoBancos().ConexaoBD();
            PreparedStatement ps;
            ResultSet rs;
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(200);
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(200);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
            jTable1.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
            model.setNumRows(0);
            while (rs.next()) {
                model.addRow(new String[]{rs.getString("nomeCompleto"), rs.getString("designacao")
                });
            }
        } catch (Exception ex) {
            System.out.println("Erro!!!" + ex);
        }

    }
}
