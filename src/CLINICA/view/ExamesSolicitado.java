/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package CLINICA.view;

import CLINICA.controller.ControllerServico;
import CLINICA.controller.ControllerExamesporFazer;
import CLINICA.controller.ControllerExamesporFazerItens;
import CLINICA.controller.ControllerUtente;
import CLINICA.relatorios.RelatorioLaboratorio;
import java.awt.Image;
import java.awt.Toolkit;
import java.net.URL;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Date;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;
import sf.ce.conexao.ConexaoBancos;
import sf.ce.utilizacoes.Data;

/**
 *
 * @author Probook
 */
public class ExamesSolicitado extends javax.swing.JFrame {

    /**
     * Creates new form ExamesSolicitado
     */
    Data d = new Data();
    PreparedStatement ps;
    ResultSet rs;
    int codigoClinico;
    String nomeProduto;
    Connection con;
    private boolean isBHCG;
    private DefaultListModel ls;
    String user;
    DefaultTableModel defaultTableModel;
    ControllerServico controllerServico;
    ControllerExamesporFazer controllerExamesporFazer;
    ControllerExamesporFazerItens controllerExamesporFazerItens;
    ControllerUtente controllerUtente;
    RelatorioLaboratorio laboratorio = new RelatorioLaboratorio();

    public ExamesSolicitado(String nome) {
        initComponents();
        this.user = nome;
        controllerServico = new ControllerServico(con);
        controllerUtente = new ControllerUtente(con);
        controllerExamesporFazer = new ControllerExamesporFazer(con);
        controllerExamesporFazerItens = new ControllerExamesporFazerItens(con);
        jLabel2.setText("");
        jDateChooser1.setDate(new Date());
        jDateChooser2.setDate(new Date());
        mostrarExame("SELECT distinct p.idexamesPorFazer,p.dataPedido,hora as horas,pa.nomeCompleto,s1.designacao,s.designacao\n"
                + "FROM examesporfazer p inner join examesporfazeritems e2 on p.idexamesPorFazer = e2.codigoExames\n"
                + "inner join servicos s1 on s1.idServico = e2.codigoProduto\n"
                + "inner join pacientes pa on p.codigoPaciente =pa.idPaciente\n"
                + "inner join status_exames s on s.idstatus_exames = p.codigoStatus\n"
                + "inner join examesintegrado ex on s1.idServico = ex.codigoServico\n"
                + "where s.designacao ='Pago' AND e2.Espera='NÃO' AND ex.codigoCategoria > 0\n"
                + " and p.dataPedido =CURRENT_DATE");

        setLocationRelativeTo(null);
        iconeSistema();
    }

    public final void iconeSistema() {
        // URL caminho = this.getClass().getResource("/meus icons/GRest.png");
        URL caminho = this.getClass().getResource("/sf/ce/imagens/Icons/logoteste2.jpg");
        Image iconeTitulo = Toolkit.getDefaultToolkit().getImage(caminho);
        this.setIconImage(iconeTitulo);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jButton4 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        jButton5 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Lista de Espera - Exames de MicroBiologia");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 204)), "Paciente em espera", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Century Gothic", 1, 11))); // NOI18N

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Data", "Hora", "Paciente", "Exames", "Estado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
            jTable1.getColumnModel().getColumn(4).setResizable(false);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 8, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 204)), "Exames Solicitado", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Century Gothic", 1, 11))); // NOI18N

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, ".."}
            },
            new String [] {
                "Código do Exame", "Código do Produto", "Nome do Exame", "Resultado", "Valor de Referência"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);
        if (jTable2.getColumnModel().getColumnCount() > 0) {
            jTable2.getColumnModel().getColumn(0).setResizable(false);
            jTable2.getColumnModel().getColumn(2).setResizable(false);
            jTable2.getColumnModel().getColumn(3).setResizable(false);
            jTable2.getColumnModel().getColumn(4).setResizable(false);
        }

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 204)), "Buscar exames Anterior", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Century Gothic", 1, 11))); // NOI18N

        jButton4.setFont(new java.awt.Font("Century Gothic", 3, 11)); // NOI18N
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sf/ce/imagens/Icons/icons8-google-web-search-26.png"))); // NOI18N
        jButton4.setText("Buscar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jTextField1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Nome do Paciente"));
        jTextField1.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1CaretUpdate(evt);
            }
        });

        jTextField2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Código do Exame"));
        jTextField2.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField2CaretUpdate(evt);
            }
        });

        jButton5.setFont(new java.awt.Font("Century Gothic", 3, 11)); // NOI18N
        jButton5.setText("Pesquisar");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 288, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jButton4)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                        .addComponent(jTextField1)
                        .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 204)), "Processar", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        jButton1.setFont(new java.awt.Font("Century Gothic", 3, 11)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sf/ce/imagens/Icons/icons8-product-32.png"))); // NOI18N
        jButton1.setText("Processar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sf/ce/imagens/Icons/icons8-microsoft-word-filled-32.png"))); // NOI18N
        jButton3.setText("Imprimir");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton2.setText("Resultados Prontos");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(30, 30, 30))
        );

        jLabel2.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 51, 0));
        jLabel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 153, 204), 1, true));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        int codigo = Integer.parseInt(jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString());
        String nome = jTable1.getValueAt(jTable1.getSelectedRow(), 3).toString();
        int codigoProduto = controllerServico.getCodigoServico(jTable1.getValueAt(jTable1.getSelectedRow(), 4).toString());
        System.out.println("Codigo do Produto:" + codigoProduto);
        String dataPedido = jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString();

        jLabel2.setText(nome.toUpperCase());
        mostrarExameSolicitado("SELECT distinct e1.codigoExames, s.idServico,cx.designacao,s.referencia from examesporfazer e inner join examesporfazeritems e1 on e.idexamesPorFazer = e1.codigoExames\n"
                + "inner join servicos s on e1.codigoProduto = s.idServico\n"
                + "inner join pacientes pa on e.codigoPaciente =pa.idPaciente\n"
                + "inner join categoriaServico c  on c.idcategoriaServico=s.codigoCategoria\n"
                + "inner join examesintegrado ex on s.idServico = ex.codigoServico\n"
                + "inner join categoria_exames cx on cx.codigo = ex.codigoCategoria\n"
                + "where e.dataPedido ='" + getDatapedido() + "' and s.idServico=" + codigoProduto + " and e.idexamesPorFazer =" + codigo + " and s.codigoCategoria=2 AND Espera ='NAO'\n"
                + "order by e1.codigoExames");
    }//GEN-LAST:event_jTable1MouseClicked

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        String codigoExame = jTable2.getValueAt(jTable2.getSelectedRow(), 0).toString();
        if (evt.getClickCount() == 1) {
            abrirOutroFormulario();
            System.out.println("Ultimo codigo do Exame:" + codigoExame);

        }
    }//GEN-LAST:event_jTable2MouseClicked

    public Date getData() {
        return d.converteDataSql(jDateChooser1.getDate());
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        actualizarResultados();
        String codigoExame = jTable2.getValueAt(jTable2.getSelectedRow(), 0).toString();
        String codigoProduto = jTable2.getValueAt(jTable2.getSelectedRow(), 1).toString();
        controllerExamesporFazerItens.actualizarStatus(codigoExame, codigoProduto);
        controllerExamesporFazer.getNomedoTecnico(user, codigoExame);
        mostrarExame("SELECT distinct p.idexamesPorFazer,p.dataPedido,hora as horas,pa.nomeCompleto,s1.designacao,s.designacao\n"
                + "FROM examesporfazer p inner join examesporfazeritems e2 on p.idexamesPorFazer = e2.codigoExames\n"
                + "inner join servicos s1 on s1.idServico = e2.codigoProduto\n"
                + "inner join pacientes pa on p.codigoPaciente =pa.idPaciente\n"
                + "inner join status_exames s on s.idstatus_exames = p.codigoStatus\n"
                + "inner join examesintegrado ex on s1.idServico = ex.codigoServico\n"
                + "where s.designacao ='Pago' AND e2.Espera='NÃO' AND ex.codigoCategoria > 0\n"
                + " and p.dataPedido =CURRENT_DATE");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        int codigoExame = Integer.parseInt(jTable2.getValueAt(jTable2.getSelectedRow(), 0).toString());
        int codigoProduto = Integer.parseInt(jTable2.getValueAt(jTable2.getSelectedRow(), 1).toString());
        String data = controllerExamesporFazer.getDataPedido(codigoExame);
        laboratorio.getResultadoExamesA6(data, data, getCodigoPaciente(), codigoExame, codigoProduto);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        mostrarExame("SELECT distinct p.idexamesPorFazer,p.dataPedido,hora as horas,pa.nomeCompleto,s1.designacao,s.designacao\n"
                + "FROM examesporfazer p inner join examesporfazeritems e2 on p.idexamesPorFazer = e2.codigoExames\n"
                + "inner join servicos s1 on s1.idServico = e2.codigoProduto\n"
                + "inner join pacientes pa on p.codigoPaciente =pa.idPaciente\n"
                + "inner join status_exames s on s.idstatus_exames = p.codigoStatus\n"
                + "inner join examesintegrado ex on s1.idServico = ex.codigoServico\n"
                + "where s.designacao ='Pago' AND e2.Espera='NÃO' AND ex.codigoCategoria > 0\n"
                + " and p.dataPedido ='" + getData() + "'");
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jTextField2CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField2CaretUpdate
        mostrarExame("SELECT distinct p.idexamesPorFazer,p.dataPedido,hora as horas,pa.nomeCompleto,s1.designacao,s.designacao\n"
                + "FROM examesporfazer p inner join examesporfazeritems e2 on p.idexamesPorFazer = e2.codigoExames\n"
                + "inner join servicos s1 on s1.idServico = e2.codigoProduto\n"
                + "inner join pacientes pa on p.codigoPaciente =pa.idPaciente\n"
                + "inner join status_exames s on s.idstatus_exames = p.codigoStatus\n"
                + "inner join examesintegrado ex on s1.idServico = ex.codigoServico\n"
                + "where s.designacao ='Pago' AND e2.Espera='NÃO' AND ex.codigoCategoria > 0\n"
                + " and p.idexamesPorFazer ='"+getCodigo()+"'");
    }//GEN-LAST:event_jTextField2CaretUpdate

    private void jTextField1CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1CaretUpdate
        mostrarExame("SELECT distinct p.idexamesPorFazer,p.dataPedido,hora as horas,pa.nomeCompleto,s1.designacao,s.designacao\n"
                + "FROM examesporfazer p inner join examesporfazeritems e2 on p.idexamesPorFazer = e2.codigoExames\n"
                + "inner join servicos s1 on s1.idServico = e2.codigoProduto\n"
                + "inner join pacientes pa on p.codigoPaciente =pa.idPaciente\n"
                + "inner join status_exames s on s.idstatus_exames = p.codigoStatus\n"
                + "inner join examesintegrado ex on s1.idServico = ex.codigoServico\n"
                + "where s.designacao ='Pago' AND e2.Espera='NÃO' AND ex.codigoCategoria > 0\n"
                + " and pa.nomeCompleto like '%"+jTextField1.getText()+"'%");
    }//GEN-LAST:event_jTextField1CaretUpdate

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        new ResultadoPronto1("Mind Vision Tecnology").setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        mostrarExame("SELECT distinct p.idexamesPorFazer,p.dataPedido,hora as horas,pa.nomeCompleto,s1.designacao,s.designacao\n"
                + "FROM examesporfazer p inner join examesporfazeritems e2 on p.idexamesPorFazer = e2.codigoExames\n"
                + "inner join servicos s1 on s1.idServico = e2.codigoProduto\n"
                + "inner join pacientes pa on p.codigoPaciente =pa.idPaciente\n"
                + "inner join status_exames s on s.idstatus_exames = p.codigoStatus\n"
                + "inner join examesintegrado ex on s1.idServico = ex.codigoServico\n"
                + "where s.designacao ='Pago' AND e2.Espera='NÃO' AND ex.codigoCategoria > 0\n"
                + " and p.dataPedido BETWEEN '"+getData1()+"' AND '"+getData2()+"'");
    }//GEN-LAST:event_jButton5ActionPerformed

    public Date getData1() {
        return d.converteDataSql(jDateChooser1.getDate());
    }

    public Date getData2() {
        return d.converteDataSql(jDateChooser2.getDate());
    }

    public int getCodigo() {
        return Integer.parseInt(jTextField2.getText());
    }

    public void setNomeProduto(String nomeProduto) {
        this.nomeProduto = nomeProduto;
    }

    public void actualizarResultados() {
        int codigoResultadoItem;
        String resultado, produto, referencia;
        String factor, codigoPaciente;
        boolean result = false;
        System.out.println("Entrouuuuuuuuuuuu aqui");

        for (int i = 0; i < jTable2.getRowCount(); i++) {
            try {
                String codigoExames = jTable2.getValueAt(i, 0).toString();
                codigoResultadoItem = controllerExamesporFazerItens.codigoItem(jTable2.getValueAt(i, 2).toString(), getDatapedido(), codigoExames, getCodigoPaciente());
//                codigoResultadoItem = controllerExamesporFazerItens.codigoItem(jTable2.getValueAt(i, 2).toString(), getDatapedido(), getCodigoPaciente());
                produto = jTable2.getValueAt(i, 2).toString();
                System.out.println("Resultado:" + codigoResultadoItem);
                System.out.println("Produto:" + produto);
                String codigoProduto1 = jTable2.getValueAt(i, 0).toString();
                String codigoProduto = jTable2.getValueAt(i, 1).toString();
                resultado = jTable2.getValueAt(i, 3).toString();
                referencia = jTable2.getValueAt(i, 4).toString();
                System.out.println("Resultado:" + resultado);
                codigoPaciente = jLabel2.getText().toUpperCase();
                if (produto.equalsIgnoreCase("BHCG") || produto.equalsIgnoreCase("BETAHCG")) {
                    isBHCG = true;
                    setNomeProduto(produto);
                }
                if (!resultado.equals("")) {
                    System.out.println("Entrou aqui");
                    controllerExamesporFazerItens.actualizarResultado(codigoResultadoItem, codigoProduto1, resultado, getDatapedido(), "", referencia);
                    controllerExamesporFazerItens.actualizarStatus(codigoProduto1, codigoProduto);

                }
            } catch (java.lang.NullPointerException e) {
                System.out.println(e.getMessage());
            }
        }
        JOptionPane.showMessageDialog(null, "Análise processado com Sucesso");

    }

    /**
     * @param sql
     */
    public final void mostrarExame(String sql) {
     //   System.out.println("Teste:" + sql);
        try {
            con = new ConexaoBancos().ConexaoBD();
            PreparedStatement ps;
            ResultSet rs;
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(50);
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(300);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(300);
            jTable1.getColumnModel().getColumn(4).setResizable(false);
            jTable1.getColumnModel().getColumn(5).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(5).setResizable(false);
            jTable1.getTableHeader().setReorderingAllowed(false);
            jTable1.setAutoResizeMode(jTable1.AUTO_RESIZE_OFF);
            jTable1.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

            model.setNumRows(0);
            while (rs.next()) {
                model.addRow(new String[]{rs.getString("p.idexamesPorFazer"), rs.getString("p.dataPedido"), rs.getString("horas"), rs.getString("pa.nomeCompleto"),
                    rs.getString("s1.designacao"), rs.getString("s.designacao")

                });
            }
        } catch (Exception ex) {
            System.out.println("Erro!!!" + ex);
        }

    }

    public void mostrarExameSolicitado(String sql) {
        System.out.println("Teste:" + sql);
        try {
            con = new ConexaoBancos().ConexaoBD();
            PreparedStatement ps;
            ResultSet rs;
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();
            DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
            jTable2.getColumnModel().getColumn(0).setPreferredWidth(125);
            jTable2.getColumnModel().getColumn(0).setResizable(false);
            jTable2.getColumnModel().getColumn(1).setPreferredWidth(125);
            jTable2.getColumnModel().getColumn(1).setResizable(false);
            jTable2.getColumnModel().getColumn(2).setPreferredWidth(200);
            jTable2.getColumnModel().getColumn(2).setResizable(false);
            jTable2.getColumnModel().getColumn(3).setPreferredWidth(200);
            jTable2.getColumnModel().getColumn(3).setResizable(false);
            jTable2.getColumnModel().getColumn(4).setPreferredWidth(125);
            jTable2.getColumnModel().getColumn(4).setResizable(false);
            jTable2.getTableHeader().setReorderingAllowed(false);
            jTable2.setAutoResizeMode(jTable2.AUTO_RESIZE_OFF);
            jTable2.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
            model.setNumRows(0);
            while (rs.next()) {
                model.addRow(new String[]{rs.getString("e1.codigoExames"), rs.getString("s.idServico"), rs.getString("cx.designacao"), "", rs.getString("s.referencia")
                });
            }
        } catch (Exception ex) {
            System.out.println("Erro!!!" + ex);
        }

    }

//    public void limparTabela() {
//        jTable1.removeAll();
//    }
    public int getCodigoPaciente() {
        return controllerUtente.getCodigoUtente(jLabel2.getText());
    }

    public void limparTabela() {
        jTable2.removeAll();
    }

    public void abrirOutroFormulario() {

        try {
            String produto1 = jTable1.getValueAt(jTable1.getSelectedRow(), 4).toString();
            String produto = jTable2.getValueAt(jTable2.getSelectedRow(), 2).toString();
            String dataPedido = jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString();
            String status = jTable1.getValueAt(jTable1.getSelectedRow(), 5).toString();
            int codigoStautsExames = controllerExamesporFazer.getCodigoStatusExames(status);
            int linha = jTable2.getSelectedRow();
            int codigoProduto = controllerServico.getCodigoProdutoItemByNameMicrobiologia(produto);
            controllerExamesporFazer.getResultadosProdutosItem(codigoProduto, dataPedido, getCodigoPaciente());
            int codigoCategoria = controllerExamesporFazer.getCodigoCategoriaServicoMicro(produto);
            int codigoExame = Integer.parseInt(jTable2.getValueAt(jTable2.getSelectedRow(), 0).toString());

            int codigoExameAFazerItem = getCodigoExameAFazerItem();
//                    JOptionPane.showMessageDialog(null,"2");

            if (verificarProdutoItem(produto) != 0) {
                if (codigoProduto != 0) {
//                    JOptionPane.showMessageDialog(null,"2");
                    new ExamesPorParametrosMicro(codigoExame, codigoCategoria, getDatapedido(), produto1, codigoStautsExames, getCodigoPaciente()).setVisible(true);
                }
            }
        } catch (Exception e) {
            System.out.println("Erro:" + e.getMessage());
        }
    }

    public String getDatapedido() {
        return jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString();
    }

    public String getProduto() {
        return jTable1.getValueAt(jTable1.getSelectedRow(), 4).toString();
    }

    public String getCategoria() {
        return jTable2.getValueAt(jTable2.getSelectedRow(), 2).toString();
    }

    public int getCodigoExameAFazerItem() {
        return controllerExamesporFazer.codigoItemMicro(getProduto(), getCategoria(), getDatapedido(), getCodigoPaciente());
    }

    public int verificarProdutoItem(String produto) {
        return controllerServico.getCodigoProdutoItemByNameMicro(produto);
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ExamesSolicitado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ExamesSolicitado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ExamesSolicitado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ExamesSolicitado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ExamesSolicitado("").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
