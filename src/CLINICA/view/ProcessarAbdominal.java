/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package CLINICA.view;

import CLINICA.controller.ControllerEcografia;
import CLINICA.controller.ControllerResultadoRaioX;
import CLINICA.controller.ControllerServico;
import CLINICA.controller.ControllerUtente;
import CLINICA.modelo.ResultadoRaioX;
import CLINICA.relatorios.RelatorioEcografia;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.File;
import java.net.URL;
import java.sql.Connection;
import java.util.HashMap;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;
import sf.ce.conexao.ConexaoBancos;

/**
 *
 * @author Ba
 */
public class ProcessarAbdominal extends javax.swing.JFrame {

    /**
     * Creates new form ProcessarEcografia
     */
    ResultadoRaioX resultadoRaioX = new ResultadoRaioX();
    ControllerResultadoRaioX controllerResultadoRaioX;
    ControllerServico controllerServico;
    ControllerUtente controllerUtente;
    ControllerEcografia controllerEcografia;
    Connection con;
    int codigoUser;
    RelatorioEcografia ecografia = new RelatorioEcografia();
    String codigoPedido;
    int codigoProduto;
    int codigoExame;

    public ProcessarAbdominal(String nome, int idade, String ecografia, String designacao, String conclusao, int codigoUser, int codigoEcografia, String codigo, int estado, int codigoExame) {
        initComponents();
        this.codigoExame = codigoExame;
        jLabel2.setText(nome);
        this.codigoPedido = codigo;
        jLabel1.setText(String.valueOf(idade) + "Anos");
        jLabel3.setText(ecografia);
        this.codigoUser = codigoUser;
        if (estado != 1) {
            jButton6.setText("Editar");
        }
        controllerEcografia = new ControllerEcografia(con);
        controllerResultadoRaioX = new ControllerResultadoRaioX(con);
        controllerUtente = new ControllerUtente(con);
        controllerServico = new ControllerServico(con);
        this.codigoProduto = codigoEcografia;
        jEditorPane1.setText(designacao);
        jTextPane1.setText(conclusao);
        iconeSistema();
        setLocationRelativeTo(null);

    }

    public final void iconeSistema() {
        // URL caminho = this.getClass().getResource("/meus icons/GRest.png");
        URL caminho = this.getClass().getResource("/sf/ce/imagens/Icons/logoteste2.jpg");
        Image iconeTitulo = Toolkit.getDefaultToolkit().getImage(caminho);
        this.setIconImage(iconeTitulo);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jEditorPane1 = new javax.swing.JEditorPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jTextField1 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setAlwaysOnTop(true);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Paciente"));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 51));
        jLabel1.setText("Idade:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 0, 51));
        jLabel2.setText("Nome:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 0, 51));
        jLabel3.setText("Ecografia:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 395, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addContainerGap())
        );

        jEditorPane1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Designação"));
        jEditorPane1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jScrollPane3.setViewportView(jEditorPane1);

        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Conclusão"));

        jTextPane1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jScrollPane1.setViewportView(jTextPane1);

        jTextField1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Observação");

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sf/ce/imagens/Icons/icons8-binder-32.png"))); // NOI18N
        jButton6.setText("Salvar");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sf/ce/imagens/Icons/icons8-export-pdf-filled-32.png"))); // NOI18N
        jButton8.setText("Pre-visualizar");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sf/ce/imagens/Icons/icons8-exit-sign-32 (1).png"))); // NOI18N
        jButton7.setText("Sair");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton7)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed

        if (jButton6.getText() == "Salvar") {
            int resposta = JOptionPane.showConfirmDialog(rootPane, "Queira por favor reler com atenção antes de salva", "", JOptionPane.YES_NO_OPTION);
            if (resposta == JOptionPane.YES_OPTION) {
                salvar();
                controllerEcografia.alter(codigoProduto, codigoPedido);
                int codigoRaixo = controllerEcografia.getLastFactura();
                if (jLabel3.getText().equals("Ecografia Abdominal")) {
                    ecografia.getEcografiaAbdominal(codigoRaixo);
                } else if (jLabel3.getText().equals("Ecografia Obstétrica")) {
                    ecografia.getEcografiaObstetrica(codigoRaixo);
                } else if (jLabel3.getText().equals("Ecografia da Mama")) {
                    ecografia.getEcografiaMama(codigoRaixo);
                } else if (jLabel3.getText().equals("Ecografia Testicular")) {
                    ecografia.getEcografiaTesticular(codigoRaixo);
                } else if (jLabel3.getText().equals("Ecografia da Tiroide")) {
                    ecografia.getEcografiaTiroide(codigoRaixo);
                } else {
                    ecografia.getEcografiaAbdominal(codigoRaixo);
                }
            }

        } else {
            editar();
        
            if (jLabel3.getText().equals("Ecografia Abdominal")) {
                ecografia.getEcografiaAbdominal(codigoExame);
            } else if (jLabel3.getText().equals("Ecografia Obstétrica")) {
                ecografia.getEcografiaObstetrica(codigoExame);
            } else if (jLabel3.getText().equals("Ecografia da Mama")) {
                ecografia.getEcografiaMama(codigoExame);
            } else if (jLabel3.getText().equals("Ecografia Testicular")) {
                ecografia.getEcografiaTesticular(codigoExame);
            } else if (jLabel3.getText().equals("Ecografia da Tiroide")) {
                ecografia.getEcografiaTiroide(codigoExame);
            } else {
                ecografia.getEcografiaAbdominal(codigoExame);
            }
        }

////            
//        }
//             
//            if (codigoExame != 0) {
//                System.out.println("Editar..............");
//            }
//            if (jButton6.getText().equals("Salvar")) {
//                salvar();
//                controllerEcografia.alter(codigoProduto, codigoPedido);
//                int codigoRaixo = controllerEcografia.getLastFactura();
//                if (jLabel3.getText().equals("Ecografia Abdominal")) {
//                    ecografia.getEcografiaAbdominal(codigoRaixo);
//                } else if (jLabel3.getText().equals("Ecografia Obstétrica")) {
//                    ecografia.getEcografiaObstetrica(codigoRaixo);
//                } else if (jLabel3.getText().equals("Ecografia da Mama")) {
//                    ecografia.getEcografiaMama(codigoRaixo);
//                } else if (jLabel3.getText().equals("Ecografia Testicular")) {
//                    ecografia.getEcografiaTesticular(codigoRaixo);
//                } else if (jLabel3.getText().equals("Ecografia da Tiroide")) {
//                    ecografia.getEcografiaTiroide(codigoRaixo);
//                } else {
//                    ecografia.getEcografiaAbdominal(codigoRaixo);
//                }
//            }
//        }

    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed

        int codigoServico = controllerServico.getCodigoServico(jLabel3.getText());
        int codigoPaciente = controllerUtente.getCodigoUtente(jLabel2.getText());
        String designacao = "Ecografia Obstétrica";
        if (designacao.equals(jLabel3.getText())) {
            int resposta = JOptionPane.showConfirmDialog(null, "Ecografia Obstétrica seg a quarto trimestre?", "Atenção", JOptionPane.YES_NO_OPTION);
            if (resposta == JOptionPane.YES_OPTION) {
                String dados = "Ecografia Obstétrica seg a quarto trimestre";
                int codigoProduto = controllerServico.getCodigoServico(dados);
                getEcografiaAbdominal(codigoProduto, codigoPaciente, jEditorPane1.getText(), jTextPane1.getText(), jTextField1.getText());
            } else if (resposta == JOptionPane.NO_OPTION) {
                resposta = JOptionPane.showConfirmDialog(null, "Ecografia Obstétrica primeiro trimestro", "Atenção", JOptionPane.YES_NO_OPTION);
                if (resposta == JOptionPane.YES_OPTION) {
                    String dados = "Ecografia Obstétrica primeiro trimestro";
                    int codigoProduto = controllerServico.getCodigoServico(dados);
                    getEcografiaAbdominal(codigoProduto, codigoPaciente, jEditorPane1.getText(), jTextPane1.getText(), jTextField1.getText());
                }
            }
            if (resposta == JOptionPane.NO_OPTION) {
                resposta = JOptionPane.showConfirmDialog(null, "Ecografia Obstétrica Gemelar", "Atenção", JOptionPane.YES_NO_OPTION);
                if (resposta == JOptionPane.YES_OPTION) {
                    String dados = "Ecografia Obstétrica Gemelar";
                    int codigoProduto = controllerServico.getCodigoServico(dados);
                    getEcografiaAbdominal(codigoProduto, codigoPaciente, jEditorPane1.getText(), jTextPane1.getText(), jTextField1.getText());
                }
            }
        } else {
            getEcografiaAbdominal(codigoServico, codigoPaciente, jEditorPane1.getText(), jTextPane1.getText(), jTextField1.getText());
        }


    }//GEN-LAST:event_jButton8ActionPerformed

    public void getEcografiaAbdominal(int codigoServico, int codigoCliente, String designacao, String conclusao, String estado) {

        con = new ConexaoBancos().ConexaoBD();
        HashMap hashMap = new HashMap();
        hashMap.put("CODIGO", codigoServico);
        hashMap.put("PACIENTE", codigoCliente);
        hashMap.put("Designacao", designacao);
        hashMap.put("conclusao", conclusao);
        hashMap.put("estado", estado);

        String relatorio = "relatorios/resultadoEcografiaAbdominalPrevisualizar.jasper";
        System.out.println("Relatorio:" + relatorio);

        File file = new File(relatorio).getAbsoluteFile();
        String obterCaminho = file.getAbsolutePath();
        System.out.println("Caminho:" + obterCaminho);
        try {
            JasperFillManager.fillReport(obterCaminho, hashMap, con);

            JasperPrint jasperPrint = JasperFillManager.fillReport(obterCaminho, hashMap, con);

            if (jasperPrint.getPages().size() >= 1) {
                JasperViewer jasperViewer = new JasperViewer(jasperPrint, false);
                jasperViewer.setTitle("Factura");

                jasperViewer.setVisible(true);
                jasperViewer.setAlwaysOnTop(true);
            } else {
                JOptionPane.showMessageDialog(null, "Nao Existem Pedidos!...");
            }
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null, "ERRO AO TENTAR MOSTRAR AS ENTRADAS !..." + ex);
        }
    }
    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        dispose();
    }//GEN-LAST:event_jButton7ActionPerformed

    public int getCodigoServico() {

        return controllerServico.getCodigoServico(jLabel3.getText());

    }

    public int getCodigoPaciente() {
        // jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString();
        return controllerUtente.getCodigoUtente(jLabel2.getText());
    }

    public void salvar() {
        resultadoRaioX.setCodigoPaciente(getCodigoPaciente());
        resultadoRaioX.setCodigoServico(getCodigoServico());
        resultadoRaioX.setCodigoUser(codigoUser);
        resultadoRaioX.setRaioX(jLabel3.getText());
        resultadoRaioX.setDescricao(jEditorPane1.getText());
        resultadoRaioX.setImagem("");
        resultadoRaioX.setSom("");
        resultadoRaioX.setVideo("");
        resultadoRaioX.setResultado(jTextPane1.getText());
        resultadoRaioX.setNomePaciente(jLabel2.getText());
        resultadoRaioX.setEstado(jTextField1.getText());
        resultadoRaioX.setOvarios("");
        resultadoRaioX.setConclusao(jTextPane1.getText());
        System.out.println("Entrouuuu");
        controllerResultadoRaioX.insertToEcografia(resultadoRaioX);
    }

    public void editar() {
        resultadoRaioX.setCodigoPaciente(getCodigoPaciente());
        resultadoRaioX.setCodigoServico(getCodigoServico());
        resultadoRaioX.setCodigoUser(codigoUser);
        resultadoRaioX.setRaioX(jLabel3.getText());
        resultadoRaioX.setDescricao(jEditorPane1.getText());
        resultadoRaioX.setImagem("");
        resultadoRaioX.setSom("");
        resultadoRaioX.setVideo("");
        resultadoRaioX.setResultado(jTextPane1.getText());
        resultadoRaioX.setNomePaciente(jLabel2.getText());
        resultadoRaioX.setEstado(jTextField1.getText());
        resultadoRaioX.setOvarios("");
        resultadoRaioX.setConclusao(jTextPane1.getText());
        controllerResultadoRaioX.editarEcografia(resultadoRaioX, codigoExame);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProcessarAbdominal.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProcessarAbdominal.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProcessarAbdominal.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProcessarAbdominal.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new ProcessarEcografia().setVisible(true);
//            }
//        });
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new ProcessarEcografia().setVisible(true);
//            }
//        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JEditorPane jEditorPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextPane jTextPane1;
    // End of variables declaration//GEN-END:variables
}
