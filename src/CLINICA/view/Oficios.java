/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package CLINICA.view;

import CLINICA.controller.ControllerGuia;
import CLINICA.controller.ControllerSeguradora;
import CLINICA.excell.AbrilExcell;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.File;
import java.net.URL;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import jxl.Workbook;
import jxl.format.Colour;
import jxl.write.Label;
import jxl.write.NumberFormats;
import jxl.write.WritableCell;
import jxl.write.WritableCellFormat;
import jxl.write.WritableFont;
import jxl.write.WritableSheet;
import jxl.write.WritableWorkbook;
import sf.ce.conexao.ConexaoBancos;
import sf.ce.utilizacoes.Data;
import java.sql.Connection;

/**
 *
 * @author Probook
 */
public class Oficios extends javax.swing.JFrame {

    /**
     * Creates new form Oficios
     */
    ConexaoBancos conexao = new ConexaoBancos();
    String sql;
    PreparedStatement ps;
    ResultSet rs;
    ControllerSeguradora controllerSeguradora;
    ControllerGuia controllerGuia;
    Data d = new Data();
    Connection con;
    private Workbook wb;

    public Oficios() {
        initComponents();
        controllerGuia = new ControllerGuia(con);
        jDateChooser1.setDate(new Date());
        jDateChooser2.setDate(new Date());
        controllerSeguradora = new ControllerSeguradora(con);
        // criarTodos("", "Ba", "");
        jComboBox1.setModel(new DefaultComboBoxModel(controllerSeguradora.getTodasSeguradoras().toArray()));
        jComboBox1.addItem("Todos");
        setLocationRelativeTo(null);
        iconeSistema();
    }

    public final void iconeSistema() {
        // URL caminho = this.getClass().getResource("/meus icons/GRest.png");
        URL caminho = this.getClass().getResource("/sf/ce/imagens/Icons/logoteste2.jpg");
        Image iconeTitulo = Toolkit.getDefaultToolkit().getImage(caminho);
        this.setIconImage(iconeTitulo);
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        jPanel3 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jfBK = new javax.swing.JFileChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("OFICIO");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Seguradoras"));

        jLabel4.setFont(new java.awt.Font("Century Gothic", 1, 11)); // NOI18N
        jLabel4.setText("Entidade:");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setSelected(true);
        jRadioButton1.setText("Por seguradora");

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setText("Todos");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jRadioButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jRadioButton2)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton1)
                    .addComponent(jRadioButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Intervalo"));

        jLabel5.setFont(new java.awt.Font("Century Gothic", 1, 11)); // NOI18N
        jLabel5.setText("Data 1:");

        jLabel6.setFont(new java.awt.Font("Century Gothic", 1, 11)); // NOI18N
        jLabel6.setText("Data 2:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGap(16, 16, 16)
                            .addComponent(jLabel5))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel6)
                                .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0))));

        jButton1.setFont(new java.awt.Font("Century Gothic", 1, 11)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sf/ce/imagens/Icons/icons8-microsoft-excel-32.png"))); // NOI18N
        jButton1.setText("Gerar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jfBK, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jfBK, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String arquivo, arquivo2, arquivo3 = null;
        jfBK.setVisible(true);       //  JFileChooser , criado automaticamente no Netbeans            
        int result = jfBK.showSaveDialog(null);
        if (result == jfBK.APPROVE_OPTION) {
            arquivo = jfBK.getSelectedFile().toString().concat(".");
            File file = new File(arquivo);

            if (file.exists()) {
                Object[] options = {"Sim", "Não"};
                int opcao = JOptionPane.showOptionDialog(null, "Este arquivo já existe. Quer sobreescrever este arquivo?", "Atenção!!!",
                        JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, options[0]);
                if (opcao == JOptionPane.YES_OPTION) {
                    if (jRadioButton1.isSelected()) {
                        String empresa = jComboBox1.getSelectedItem().toString();
                        criarExcell(empresa, getData1(), getData2(), String.valueOf(file));
                        JOptionPane.showMessageDialog(null, "Ofício gerado com Sucesso");
                    }
                    if (jRadioButton2.isSelected() && jComboBox1.getSelectedItem().equals("Todos")) {
                        criarExcell1(getData1(), getData2(), String.valueOf(file));
                        JOptionPane.showMessageDialog(null, "Ofício gerado com Sucesso");
                    }
                }
            } else {

                if (jRadioButton1.isSelected()) {
                    String empresa = jComboBox1.getSelectedItem().toString();
                    criarExcell(empresa, getData1(), getData2(), String.valueOf(file));
                    JOptionPane.showMessageDialog(null, "Ofício gerado com Sucesso");
                }
                if (jRadioButton2.isSelected() && jComboBox1.getSelectedItem().equals("Todos")) {
                    criarExcell1(getData1(), getData2(), String.valueOf(file));
                    JOptionPane.showMessageDialog(null, "Ofício gerado com Sucesso");
                }
            }
    }//GEN-LAST:event_jButton1ActionPerformed
    }

    public String getData1() {
        String dataSelecionada = "2015-03-07";

        if (jDateChooser1.getDate() != null) {
            GregorianCalendar gc = new GregorianCalendar();
            gc.setTime(jDateChooser1.getDate());
            dataSelecionada = gc.get(GregorianCalendar.YEAR) + "-"
                    + (gc.get(GregorianCalendar.MONTH) + 1) + "-"
                    + gc.get(GregorianCalendar.DATE);
        }
        return dataSelecionada;
    }

    public String getData2() {
        String dataSelecionada = "2015-03-07";

        if (jDateChooser2.getDate() != null) {
            GregorianCalendar gc = new GregorianCalendar();
            gc.setTime(jDateChooser2.getDate());
            dataSelecionada = gc.get(GregorianCalendar.YEAR) + "-"
                    + (gc.get(GregorianCalendar.MONTH) + 1) + "-"
                    + gc.get(GregorianCalendar.DATE);
        }
        return dataSelecionada;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Oficios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Oficios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Oficios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Oficios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Oficios().setVisible(true);
        });
    }

    public void criarExcell(String empresa, String data1, String data2, String caminho) {

        try {
            conexao.Connectando();
            sql = "SELECT DISTINCT g.numerador as guia,e.designacao as empresa, p.cartaoPS as cartao,UPPER(p.nomecompleto) as nome,date(g.dataFactura) as dataGuia,(g.valorApagar - g.desconto - g.descontoIVA) as valor FROM factura g inner join pacientes p on g.codigoCliente=p.idPaciente\n"
                    + "inner join empresaseguros e on e.idSeguros =p.codigoSeguro\n"
                    + "where e.designacao ='" + empresa + "' AND date(g.dataFactura) between '" + data1 + "' and '" + data2 + "'";
            System.out.println("Sql:" + sql);
            ps = conexao.conn.prepareStatement(sql);
            rs = ps.executeQuery();
            WritableWorkbook planilha = Workbook.createWorkbook(new File(caminho + empresa + "-" + data1 + ".xls"));

// CRIAR ABA
            WritableSheet aba = planilha.createSheet("OFÍCIO", 0);
            // WritableSheet s7 = planilha.createSheet("Images", 1);

            // Cabeçalhos
            String cabecalho[] = new String[8];
            cabecalho[0] = jComboBox1.getSelectedItem().toString().toUpperCase();
            //cabecalho[0] = "Entidade";
            cabecalho[1] = "Nº Documento";
            cabecalho[2] = "Nº Pessoa Segura";
            cabecalho[3] = "Nome da Pessoa Segura";
            cabecalho[4] = "Data Ocorrência";
            cabecalho[5] = "Total(AKZ)";
            cabecalho[6] = "Total(USD)";
            cabecalho[7] = "Observação";

            // Cor de fundo das celular
            Colour bckcolor = Colour.WHITE;

            WritableCellFormat cellFormat = new WritableCellFormat();
            WritableCellFormat cellFormat1 = new WritableCellFormat();
            cellFormat.setBackground(bckcolor);
            WritableCellFormat floatFormat = new WritableCellFormat(NumberFormats.FLOAT);
            floatFormat.setBackground(bckcolor);
            // Cor e tipo de fonte
            WritableFont fonte = new WritableFont(WritableFont.TIMES);
            fonte.setColour(Colour.BLACK);
            fonte.setItalic(true);
            //fonte.setScriptStyle(ScriptStyle.SUPERSCRIPT); //Para sublinhar o texto
            cellFormat.setFont(fonte);
            cellFormat1.setFont(fonte);
            cellFormat.setBorder(jxl.format.Border.ALL, jxl.format.BorderLineStyle.THIN, jxl.format.Colour.BLACK);
            cellFormat1.setBorder(jxl.format.Border.NONE, jxl.format.BorderLineStyle.THIN, jxl.format.Colour.BLACK);

            // Label imagLabel = new Label(0, 0, "IMAGEM");
            Label sr = new Label(4, 8, "EXMOS SRS.,");
            aba.addCell(sr);
            Label emp = new Label(4, 10, jComboBox1.getSelectedItem().toString().toUpperCase());
            aba.addCell(emp);
            Label luanda = new Label(4, 12, "LUANDA");
            aba.addCell(luanda);
            Label l = new Label(0, 14, "OFÍCIO N.º");
            aba.addCell(l);
            WritableCell cell1 = aba.getWritableCell(0, 14);
            Label l1 = new Label(0, 15, "ASSUNTO:");
            aba.addCell(l1);
            WritableCell cell2 = aba.getWritableCell(0, 15);
            //cell1.setCellFormat(cellFormat);

            int iRows = 18;
            for (int i = 0; i < cabecalho.length; i++) {

                //9- Posição onde começa o documento
                // Esta linha de código criar o cabeçalho do documento
                Label label = new Label(i, 17, cabecalho[i]);
                aba.addCell(label);
                WritableCell cell = aba.getWritableCell(i, 17);
                cell.setCellFormat(cellFormat);
            }
            int cont = 0;
            String dollar = null;
            double totgeral = 0;
            double totalDolar = 0;
            StringBuffer buffer = new StringBuffer();

            while ((rs != null) && (rs.next())) {
                // Preencher o excell com dados que vem da base de dados. 
                cont++;

                String dados = String.valueOf(cont);
                aba.addCell(new Label(0, iRows, dados, cellFormat));
                aba.addCell(new Label(1, iRows, rs.getString("guia"), cellFormat));
                aba.addCell(new Label(2, iRows, rs.getString("cartao"), cellFormat));
                aba.addCell(new Label(3, iRows, rs.getString("nome"), cellFormat));
                aba.addCell(new Label(4, iRows, rs.getString("dataGuia"), cellFormat));
                // BigDecimal res2 = new BigDecimal(rs.getDouble("valor"));
                String valor = String.format("%1$,.2f", rs.getDouble("valor"));
                String valor1 = String.format("%1$,.2f", rs.getDouble("valor") / 135);

                //String valor = "" + res2.setScale(2, BigDecimal.ROUND_HALF_UP);
                // buffer.append("SUM(rs.getDouble(\"valor\"))");
                totgeral = totgeral + rs.getDouble("valor");
                dollar = String.format("%1$,.2f", totgeral / 135);
                aba.addCell(new Label(5, iRows, valor, cellFormat));
                aba.addCell(new Label(6, iRows, valor1, cellFormat));

                ++iRows;
            }
            System.out.println("Total Geral:" + totgeral);
            System.out.println("Total Dolar:" + dollar);
            Label t1 = new Label(0, iRows, "", cellFormat);
            aba.addCell(t1);
            Label t2 = new Label(1, iRows, "", cellFormat);
            aba.addCell(t2);
            Label t3 = new Label(2, iRows, "", cellFormat);
            aba.addCell(t3);
            Label total = new Label(3, iRows, "TOTAL GERAL", cellFormat);
            aba.addCell(total);
            Label t4 = new Label(4, iRows, "", cellFormat);
            aba.addCell(t4);
            Label assunto = new Label(0, iRows + 3, "Sem outro assunto de momento, subscrevemo-nos com estima e consideração.", cellFormat1);
            aba.addCell(assunto);
            Label totalDinheiro = new Label(5, iRows, String.format("%1$,.2f", totgeral), cellFormat);
            Label totalUsd = new Label(6, iRows, dollar, cellFormat);
            aba.addCell(totalDinheiro);
            aba.addCell(totalUsd);
            planilha.write();
            planilha.close();

        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    public void criarExcell1(String data1, String data2, String caminho) {

        try {
            conexao.Connectando();
            sql = "SELECT DISTINCT g.numerador as guia,e.designacao as empresa, p.cartaoPS as cartao,UPPER(p.nomecompleto) as nome,date(g.dataFactura) as dataGuia,(g.valorApagar - (g.desconto+g.descontoIVA)) as valor FROM factura g inner join pacientes p on g.codigoCliente=p.idPaciente\n"
                    + "inner join empresaseguros e on e.idSeguros =p.codigoSeguro\n"
                    + "where date(g.dataFactura) between '" + data1 + "' and '" + data2 + "'";
            System.out.println("Sql:" + sql);
            ps = conexao.conn.prepareStatement(sql);
            rs = ps.executeQuery();

            WritableWorkbook planilha = Workbook.createWorkbook(new File(caminho + "TODOS" + "-" + data1 + ".xls"));

// CRIAR ABA
            WritableSheet aba = planilha.createSheet("OFÍCIO", 0);
            // WritableSheet s7 = planilha.createSheet("Images", 1);

            // Cabeçalhos
            String cabecalho[] = new String[7];
            cabecalho[0] = jComboBox1.getSelectedItem().toString().toUpperCase();
            //cabecalho[0] = "Entidade";
            cabecalho[1] = "Nº Documento";
            cabecalho[2] = "Empresa";
            cabecalho[3] = "Nome da Pessoa Segura";
            cabecalho[4] = "Data Ocorrência";
            cabecalho[5] = "Total(AKZ)";
            cabecalho[6] = "Total(USD)";

            // Cor de fundo das celular
            Colour bckcolor = Colour.WHITE;

            WritableCellFormat cellFormat = new WritableCellFormat();
            WritableCellFormat cellFormat1 = new WritableCellFormat();
            cellFormat.setBackground(bckcolor);
            WritableCellFormat floatFormat = new WritableCellFormat(NumberFormats.FLOAT);
            floatFormat.setBackground(bckcolor);
            // Cor e tipo de fonte
            WritableFont fonte = new WritableFont(WritableFont.TIMES);
            fonte.setColour(Colour.BLACK);
            fonte.setItalic(true);
            //fonte.setScriptStyle(ScriptStyle.SUPERSCRIPT); //Para sublinhar o texto
            cellFormat.setFont(fonte);
            cellFormat1.setFont(fonte);
            cellFormat.setBorder(jxl.format.Border.ALL, jxl.format.BorderLineStyle.THIN, jxl.format.Colour.BLACK);
            cellFormat1.setBorder(jxl.format.Border.NONE, jxl.format.BorderLineStyle.THIN, jxl.format.Colour.BLACK);

            // Label imagLabel = new Label(0, 0, "IMAGEM");
            Label sr = new Label(4, 8, "EXMOS SRS.,");
            aba.addCell(sr);
            Label emp = new Label(4, 10, jComboBox1.getSelectedItem().toString().toUpperCase());
            aba.addCell(emp);
            Label luanda = new Label(4, 12, "LUANDA");
            aba.addCell(luanda);
            Label l = new Label(0, 14, "OFÍCIO N.º");
            aba.addCell(l);
            WritableCell cell1 = aba.getWritableCell(0, 14);
            Label l1 = new Label(0, 15, "ASSUNTO:");
            aba.addCell(l1);
            WritableCell cell2 = aba.getWritableCell(0, 15);
            //cell1.setCellFormat(cellFormat);

            int iRows = 18;
            for (int i = 0; i < cabecalho.length; i++) {

                //9- Posição onde começa o documento
                // Esta linha de código criar o cabeçalho do documento
                Label label = new Label(i, 17, cabecalho[i]);
                aba.addCell(label);
                WritableCell cell = aba.getWritableCell(i, 17);
                cell.setCellFormat(cellFormat);
            }
            int cont = 0;
            String dollar = null;
            double totgeral = 0;
            double totalDolar = 0;
            StringBuffer buffer = new StringBuffer();

            while ((rs != null) && (rs.next())) {
                // Preencher o excell com dados que vem da base de dados. 
                cont++;

                String dados = String.valueOf(cont);
                aba.addCell(new Label(0, iRows, dados, cellFormat));
                aba.addCell(new Label(1, iRows, rs.getString("guia"), cellFormat));
                aba.addCell(new Label(2, iRows, rs.getString("empresa"), cellFormat));
                aba.addCell(new Label(3, iRows, rs.getString("nome"), cellFormat));
                aba.addCell(new Label(4, iRows, rs.getString("dataGuia"), cellFormat));
                // BigDecimal res2 = new BigDecimal(rs.getDouble("valor"));
                String valor = String.format("%1$,.2f", rs.getDouble("valor"));
                String valor1 = String.format("%1$,.2f", rs.getDouble("valor") / 135);

                //String valor = "" + res2.setScale(2, BigDecimal.ROUND_HALF_UP);
                // buffer.append("SUM(rs.getDouble(\"valor\"))");
                totgeral = totgeral + rs.getDouble("valor");
                dollar = String.format("%1$,.2f", totgeral / 135);
                aba.addCell(new Label(5, iRows, valor, cellFormat));
                aba.addCell(new Label(6, iRows, valor1, cellFormat));

                ++iRows;
            }
            System.out.println("Total Geral:" + totgeral);
            System.out.println("Total Dolar:" + dollar);
            Label t1 = new Label(0, iRows, "", cellFormat);
            aba.addCell(t1);
            Label t2 = new Label(1, iRows, "", cellFormat);
            aba.addCell(t2);
            Label t3 = new Label(2, iRows, "", cellFormat);
            aba.addCell(t3);
            Label total = new Label(3, iRows, "TOTAL GERAL", cellFormat);
            aba.addCell(total);
            Label t4 = new Label(4, iRows, "", cellFormat);
            aba.addCell(t4);
            Label assunto = new Label(0, iRows + 3, "Sem outro assunto de momento, subscrevemo-nos com estima e consideração.", cellFormat1);
            aba.addCell(assunto);
            Label totalDinheiro = new Label(5, iRows, String.format("%1$,.2f", totgeral), cellFormat);
            Label totalUsd = new Label(6, iRows, dollar, cellFormat);
            aba.addCell(totalDinheiro);
            aba.addCell(totalUsd);
            planilha.write();
            planilha.close();

        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    public void criarTodos(String empresa, String data1, String data2) {
        System.out.println("teste");

        try {
            conexao.Connectando();
            List lista = controllerSeguradora.getNomeCategoria();
            for (int i = 0; i < lista.size(); i++) {
                System.out.println("Teste de vida:" + lista.get(i).toString());

            }
            String sql = "SELECT DISTINCT g.idGuia as guia,e.designacao as empresa, p.cartaoPS as cartao,UPPER(p.nomecompleto) as nome,date(g.dataGuia) as dataGuia, format(g.valorApagar,2) as valor FROM guia g inner join pacientes p on g.codigoCliente=p.idPaciente\n"
                    + "inner join empresaseguros e on e.idSeguros =p.codigoSeguro\n"
                    + "where e.designacao ='" + empresa + "' AND date(g.dataGuia) between '" + data1 + "' and '" + data2 + "'";
            System.out.println("Sql:" + sql);
            ps = conexao.conn.prepareStatement(sql);
            rs = ps.executeQuery();
            URL caminho = this.getClass().getResource("/Oficios/");
            WritableWorkbook planilha = Workbook.createWorkbook(new File(caminho + data1 + ".xls"));
//                    "C:\\Projecto Santomed\\ProVanguarda\\Oficios\\" + data1 + ".xls"));
            // CRIAR ABA
            WritableSheet aba = null;
            for (int i = 0; i < lista.size(); i++) {
                aba = planilha.createSheet(lista.get(i).toString(), 0);
            }

            String cabecalho[] = new String[6];
            cabecalho[0] = jComboBox1.getSelectedItem().toString().toUpperCase();
            //cabecalho[0] = "Entidade";
            cabecalho[1] = "Nº Documento";
            cabecalho[2] = "Nº Pessoa Segura";
            cabecalho[3] = "Nome da Pessoa Segura";
            cabecalho[4] = "Data Ocorrência";
            cabecalho[5] = "Total(AKZ)";

            // Cor de fundo das celular
            Colour bckcolor = Colour.WHITE;

            WritableCellFormat cellFormat = new WritableCellFormat();
            WritableCellFormat cellFormat1 = new WritableCellFormat();
            cellFormat.setBackground(bckcolor);

            // Cor e tipo de fonte
            WritableFont fonte = new WritableFont(WritableFont.TIMES);
            fonte.setColour(Colour.BLACK);
            fonte.setItalic(true);
            //fonte.setScriptStyle(ScriptStyle.SUPERSCRIPT); //Para sublinhar o texto
            cellFormat.setFont(fonte);
            cellFormat1.setFont(fonte);
            cellFormat.setBorder(jxl.format.Border.ALL, jxl.format.BorderLineStyle.THIN, jxl.format.Colour.BLACK);
            cellFormat1.setBorder(jxl.format.Border.NONE, jxl.format.BorderLineStyle.THIN, jxl.format.Colour.BLACK);

            // Label imagLabel = new Label(0, 0, "IMAGEM");
//            Label sr = new Label(4, 8, "EXMOS SRS.,");
//            aba.addCell(sr);
//            Label emp = new Label(4, 10, jComboBox1.getSelectedItem().toString().toUpperCase());
//            aba.addCell(emp);
//            Label luanda = new Label(4, 12, "LUANDA");
//            aba.addCell(luanda);
//            Label l = new Label(0, 14, "OFÍCIO N.º");
//            aba.addCell(l);
//            WritableCell cell1 = aba.getWritableCell(0, 14);
//            Label l1 = new Label(0, 15, "ASSUNTO:");
//            aba.addCell(l1);
//            WritableCell cell2 = aba.getWritableCell(0, 15);
            //cell1.setCellFormat(cellFormat);
//            int iRows = 18;
//
//            for (int i = 0; i < aba.ge; i++) {
//                System.out.println("Aba:"+aba.getRows();
//            }
            int cont = 0;
            double totgeral = 0;
            StringBuffer buffer = new StringBuffer();

//            while ((rs != null) && (rs.next())) {
//                // Preencher o excell com dados que vem da base de dados. 
//                cont++;
//
//                String dados = String.valueOf(cont);
//                aba.addCell(new Label(0, iRows, dados, cellFormat));
//                aba.addCell(new Label(1, iRows, rs.getString("guia"), cellFormat));
//                aba.addCell(new Label(2, iRows, rs.getString("cartao"), cellFormat));
//                aba.addCell(new Label(3, iRows, rs.getString("nome"), cellFormat));
//                aba.addCell(new Label(4, iRows, rs.getString("dataGuia"), cellFormat));
//                BigDecimal res2 = new BigDecimal(rs.getDouble("valor"));
//                String valor = "" + res2.setScale(2, BigDecimal.ROUND_HALF_UP);
//                buffer.append("SUM(rs.getDouble(\"valor\"))");
//                totgeral = totgeral + rs.getDouble("valor");
//                aba.addCell(new Label(5, iRows, valor, cellFormat));
//                ++iRows;
//            }
//            System.out.println("Total Geral:" + totgeral);
//            Label t1 = new Label(0, iRows, "", cellFormat);
//            aba.addCell(t1);
//            Label t2 = new Label(1, iRows, "", cellFormat);
//            aba.addCell(t2);
//            Label t3 = new Label(2, iRows, "", cellFormat);
//            aba.addCell(t3);
//            Label total = new Label(3, iRows, "TOTAL GERAL", cellFormat);
//            aba.addCell(total);
//            Label t4 = new Label(4, iRows, "", cellFormat);
//            aba.addCell(t4);
//            Label assunto = new Label(0, iRows + 3, "Sem outro assunto de momento, subscrevemo-nos com estima e consideração.", cellFormat1);
//            aba.addCell(assunto);
//            Label totalDinheiro = new Label(5, iRows, String.valueOf(totgeral), cellFormat);
//            aba.addCell(totalDinheiro);
            planilha.write();
            planilha.close();

        } catch (Exception e) {
            e.printStackTrace();
        }

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JFileChooser jfBK;
    // End of variables declaration//GEN-END:variables

// Uma outra ideia
    // Sera criar várias planilhas com todas as seguras
    // e colocar todos oficios juntos para quando gerar oficios geral todos e 
    // não uma por uma.
}
