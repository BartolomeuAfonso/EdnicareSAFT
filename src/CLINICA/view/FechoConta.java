/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package CLINICA.view;

import CLINICA.controller.ControllerFechoRecepcao;
import CLINICA.controller.ControllerMedico;
import CLINICA.controller.ControllerFechoRecepcaoItens;
import CLINICA.relatorios.RelatorioVenda;
import java.awt.Image;
import java.awt.Toolkit;
import java.net.URL;
import java.sql.Connection;
import java.sql.PreparedStatement;
import CLINICA.modelo.FechoRecepcao;
import CLINICA.modelo.FechoRecepcaoItens;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;
import sf.ce.conexao.ConexaoBancos;
import sf.ce.utilizacoes.Data;

/**
 *
 * @author Probook
 */
public class FechoConta extends javax.swing.JFrame {

    Data d = new Data();
    ConexaoBancos conexao;
    PreparedStatement ps;
    ResultSet rs;
    Connection con;
    String paciente;
    RelatorioVenda relatorioVenda = new RelatorioVenda();
    private DefaultTableModel defaultTableModel;
    FechoRecepcao fechoRecepcao = new FechoRecepcao();
    FechoRecepcaoItens fechoRecepcaoItens = new FechoRecepcaoItens();
    ControllerFechoRecepcao controllerFechoRecepcao;
    ControllerFechoRecepcaoItens controllerFechoRecepcaoItens;
    ControllerMedico controllerMedico;
    int codigoEspecialidade;
    Double valorLaborio = 0.0;
    Double valorRaioX = 0.0;
    Double valorEcografia = 0.0;
    Double valorInternamento = 0.0;

    public FechoConta() {
        initComponents();
        controllerMedico = new ControllerMedico(con);
        controllerFechoRecepcao = new ControllerFechoRecepcao(con);
        controllerFechoRecepcaoItens = new ControllerFechoRecepcaoItens(con);
        valorLaborio = getValorLaboratorio();
        valorRaioX = getValorRaioX();
        valorEcografia = getValorEcografia();
        valorInternamento = getValorInternamento();
        jTable2.setValueAt(valorLaborio, 0, 1);
        jTable2.setValueAt(valorRaioX, 1, 1);
        jTable2.setValueAt(valorEcografia, 2, 1);
        jTable2.setValueAt(valorInternamento,3 , 1);

        mostraMovimentoMedico("SELECT distinct\n"
                + "medicos.`idMedico` AS idMedico,\n"
                + "medicos.`nomeCompleto` AS nomeCompleto,\n"
                + "medicos.`numeroOrdem` AS nOrdem,\n"
                + "especialidade_medico.`designacao` AS especialidade,\n"
                + "marcacaoconsulta.`dataAtendimento` as dataAtendimento,\n"
                + "format(sum(marcacaoconsulta.`preco`)*percentagemAGanhar - sum(marcacaoconsulta.`preco`)*percentagemAGanhar * 0.115,2) AS preco\n"
                + "FROM\n"
                + "`pacientes` pacientes INNER JOIN `marcacaoconsulta` marcacaoconsulta ON pacientes.`idPaciente` = marcacaoconsulta.`codigoPaciente`\n"
                + "INNER JOIN `servicos` servicos ON marcacaoconsulta.`codigoServico` = servicos.`idServico`\n"
                + "INNER JOIN `medicos` medicos ON marcacaoconsulta.`codigoMedico` = medicos.`idMedico`\n"
                + "INNER JOIN `especialidade_medico` especialidade_medico ON medicos.`codigoEspecialidade` = especialidade_medico.`idEspecialidade`\n"
                + "INNER JOIN `empresaseguros` empresaseguros ON pacientes.`codigoSeguro` = empresaseguros.`idSeguros`\n"
                + " WHERE Date (marcacaoconsulta.`dataAtendimento` ) = current_date group by 2");
        iconeSistema();

        setLocationRelativeTo(null);

    }

    public final void iconeSistema() {
        // URL caminho = this.getClass().getResource("/meus icons/GRest.png");
        URL caminho = this.getClass().getResource("/sf/ce/imagens/Icons/logoteste2.jpg");
        Image iconeTitulo = Toolkit.getDefaultToolkit().getImage(caminho);
        this.setIconImage(iconeTitulo);
    }

    public double percetangemNormal() {
        return 0.25;
    }

    public double percetangemEspecialidade() {
        return 0.5;
    }

    /**
     * l2 * This method is called from within the constructor to initialize the
     * form. WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Fecho de Conta");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 153)), "Movimentos dos Médicos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Century Gothic", 1, 11))); // NOI18N

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null}
            },
            new String [] {
                "Nº de Ordem", " Médico", "Especialidade", "Data", "Movimento"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
            jTable1.getColumnModel().getColumn(4).setResizable(false);
        }

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 622, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 153)), "Movimentos dos Serviços da Clínica", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Century Gothic", 1, 11))); // NOI18N

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Laboratório", null},
                {"Raio X", null},
                {"Imagiologia", null},
                {"Internamento", null},
                {"Outros Serviços", null}
            },
            new String [] {
                "Nº de ordem", "Movimento"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(294, 294, 294))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 153)), "Total Geral"));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sf/ce/imagens/Icons/icons8-receipt-32 (1).png"))); // NOI18N
        jButton1.setText("Resumo");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextField1.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jTextField1.setText("TOTAL GERAL");
        jTextField1.setEnabled(false);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        salvar();
        salvarItens();
    }//GEN-LAST:event_jButton1ActionPerformed

    public void salvar() {
        double valorItens = 0;
        double valorTotal = 0;
        double valorLaboratorio = 0;
        double valorTotalGeral = 0;

        for (int i = 0; i < jTable1.getRowCount(); i++) {
            valorItens = Double.valueOf(jTable1.getValueAt(i, 4).toString().replaceAll(",", "").toString());
            valorTotal = valorTotal + valorItens;

        }
        System.out.println("Total dos Medico:" + valorTotal);
        for (int i = 0; i < jTable1.getRowCount(); i++) {
            double valorItens1 = Double.valueOf(jTable2.getValueAt(i, 1).toString().replaceAll(",", "").toString());
            valorLaboratorio = valorLaboratorio + valorItens1;

        }
        System.out.println("Outros:" + valorLaboratorio);
        valorTotalGeral = valorTotal + valorLaboratorio;
        System.out.println("Total Geral:" + valorTotalGeral);
        fechoRecepcao.setValorLaboratorio(Double.valueOf(jTable2.getValueAt(0, 1).toString()));
        fechoRecepcao.setValorRaiox(Double.valueOf(jTable2.getValueAt(1, 1).toString()));
        fechoRecepcao.setValorEcografia(Double.valueOf(jTable2.getValueAt(2, 1).toString()));
        fechoRecepcao.setValorInternamento(Double.valueOf(jTable2.getValueAt(3, 1).toString()));
        fechoRecepcao.setValorOutros(Double.valueOf(jTable2.getValueAt(4, 1).toString()));
        fechoRecepcao.setValorMedico(valorTotal);
        System.out.println("Total Geral:" + valorTotalGeral);
        fechoRecepcao.setValorTotal(valorTotalGeral);
        controllerFechoRecepcao.salvar(fechoRecepcao);
    }

    public void salvarItens() {
        int codigoConta = controllerFechoRecepcao.getLastFactura();

        for (int i = 0; i < jTable1.getRowCount(); i++) {
            int codigoMedico = Integer.parseInt(jTable1.getValueAt(i, 0).toString());
            fechoRecepcaoItens.setCodigoConta(codigoConta);
            fechoRecepcaoItens.setCodigoMedico(codigoMedico);
            fechoRecepcaoItens.setValorTotal(Double.valueOf(jTable1.getValueAt(i, 4).toString().replaceAll(",", "").toString()));
            fechoRecepcaoItens.setDescricao(jTable1.getValueAt(i, 1).toString());
            controllerFechoRecepcaoItens.salvar(fechoRecepcaoItens);
        }
        for (int i = 0; i < jTable2.getSelectedRow(); i++) {
            fechoRecepcaoItens.setCodigoConta(codigoConta);
            fechoRecepcaoItens.setDescricao(jTable2.getValueAt(i, 0).toString());
            double valorItens = Double.valueOf(jTable2.getValueAt(i, 1).toString().replaceAll(",", "").toString());

            controllerFechoRecepcaoItens.salvar(fechoRecepcaoItens);
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FechoConta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FechoConta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FechoConta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FechoConta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FechoConta().setVisible(true);
            }
        });
    }

    public final double getValorLaboratorio() {
        try {
            String sql = "SELECT sum(f.valorApagar) as TotalLaboratorio FROM factura f inner join factura_itens f1 on f.idFactura =f1.codigoFactura\n"
                    + "where date(f.DataFactura) =current_date and f1.codigoCategoria =2";
            con = new ConexaoBancos().ConexaoBD();
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();
            try {
                if (rs.next()) {
                    return rs.getDouble("TotalLaboratorio");
                }
            } catch (SQLException ex) {
                System.out.println("Erro:" + ex);
            }
            return 0;
        } catch (SQLException ex) {
            System.out.println("Erro:" + ex);
        }
        return 0;
    }

    public final double getValorRaioX() {
        try {
            String sql = "SELECT sum(f.valorApagar) as TotalLaboratorio FROM factura f inner join factura_itens f1 on f.idFactura =f1.codigoFactura\n"
                    + "where date(f.DataFactura) =current_date and f1.codigoCategoria =3";
            con = new ConexaoBancos().ConexaoBD();
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();
            try {
                if (rs.next()) {
                    return rs.getDouble("TotalLaboratorio");
                }
            } catch (SQLException ex) {
                System.out.println("Erro:" + ex);
            }
            return 0;
        } catch (SQLException ex) {
            System.out.println("Erro:" + ex);
        }
        return 0;
    }

    public final double getValorEcografia() {
        try {
            String sql = "SELECT sum(f.valorApagar) as TotalLaboratorio FROM factura f inner join factura_itens f1 on f.idFactura =f1.codigoFactura\n"
                    + "where date(f.DataFactura) =current_date and f1.codigoCategoria =5";
            con = new ConexaoBancos().ConexaoBD();
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();
            try {
                if (rs.next()) {
                    return rs.getDouble("TotalLaboratorio");
                }
            } catch (SQLException ex) {
                System.out.println("Erro:" + ex);
            }
            return 0;
        } catch (SQLException ex) {
            System.out.println("Erro:" + ex);
        }
        return 0;
    }

    public final double getValorInternamento() {
        try {
            String sql = "SELECT sum(f.valorApagar) as TotalLaboratorio FROM factura f inner join factura_itens f1 on f.idFactura =f1.codigoFactura\n"
                    + "where date(f.DataFactura) =current_date and f1.codigoCategoria =16";
            con = new ConexaoBancos().ConexaoBD();
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();
            try {
                if (rs.next()) {
                    return rs.getDouble("TotalLaboratorio");
                }
            } catch (SQLException ex) {
                System.out.println("Erro:" + ex);
            }
            return 0;
        } catch (SQLException ex) {
            System.out.println("Erro:" + ex);
        }
        return 0;
    }
//    public double getValorLaboratorio(int codigo) {
//        try {
//            String sql = "SELECT sum(f.valorApagar) as TotalLaboratorio FROM factura f inner join factura_itens f1 on f.idFactura =f1.codigoFactura\n"
//                    + "where date(f.DataFactura) =current_date and f1.codigoCategoria =2";
//            ps = con.prepareStatement(sql);
//            rs = ps.executeQuery();
//            try {
//                if (rs.next()) {
//                    return rs.getDouble("Total");
//                }
//            } catch (SQLException ex) {
//                System.out.println("Erro:" + ex);
//            }
//            return 0;
//        } catch (SQLException ex) {
//            System.out.println("Erro:" + ex);
//        }
//        return 0;
//    }

    public final void mostraMovimentoMedico(String sql) {
        System.out.println("Teste:" + sql);

        try {
            con = new ConexaoBancos().ConexaoBD();
            PreparedStatement ps;
            ResultSet rs;
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(85);
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(200);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(130);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(85);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(115);
            jTable1.getColumnModel().getColumn(4).setResizable(false);
            jTable1.setAutoResizeMode(jTable1.AUTO_RESIZE_OFF);
            jTable1.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
            model.setNumRows(0);
            while (rs.next()) {
                model.addRow(new String[]{rs.getString("nOrdem"), rs.getString("nomecompleto"), rs.getString("especialidade"), rs.getString("dataAtendimento"), rs.getString("preco")

                });
            }
        } catch (Exception ex) {
            System.out.println("Erro!!!" + ex);
        }

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
