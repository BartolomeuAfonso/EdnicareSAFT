/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GestaoStock.views;

import CLINICA.controller.ControllerUsuario;
import CLINICA.controller.ControllerMedico;
import CLINICA.modelo.Config;
import CLINICA.modelo.IO;
import CLINICA.view.*;
import CLINICA.controller.*;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import static java.lang.Integer.parseInt;
import java.net.NetworkInterface;
import java.net.URL;
import java.sql.Connection;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.Enumeration;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import sf.ce.conexao.ConexaoBancos;

/**
 *
 * @author El Router
 */
public class Login extends javax.swing.JFrame {

    ControllerUsuario controllerUsuario;
    ControllerMedico controllerMedico;
    ControllerTipoUtilizador controllerTipoUtilizador;
    Connection con;
    ConexaoBancos bancos;
    int codigoTipoUtilizador;
    String data;

    public Login() {
        initComponents();
        con = new ConexaoBancos().ConexaoBD();
        //  bancos = new ConexaoBancos();
        controllerTipoUtilizador = new ControllerTipoUtilizador(con);
        controllerUsuario = new ControllerUsuario(con);
        controllerMedico = new ControllerMedico(con);
        jPasswordField1.addKeyListener(
                new KeyAdapter() {
            @Override
            public void keyReleased(KeyEvent evt) {
                if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
                    entrarSistema();
//                    entrarSistema1();
                }
            }

        });
        jPasswordField1.addKeyListener(
                new KeyAdapter() {
            @Override
            public void keyReleased(KeyEvent evt) {
                if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
                    jPasswordField1.setFocusable(true);
                }
            }

        });
//        actualizar();
        iconeSistema();
    }

    public void iconeSistema() {
        // URL caminho = this.getClass().getResource("/meus icons/GRest.png");
        URL caminho = this.getClass().getResource("/sf/ce/imagens/Icons/logoteste2.jpg");
        Image iconeTitulo = Toolkit.getDefaultToolkit().getImage(caminho);
        this.setIconImage(iconeTitulo);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel3 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jPasswordField1 = new javax.swing.JPasswordField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setForeground(new java.awt.Color(0, 102, 255));
        setUndecorated(true);
        setResizable(false);

        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTextField1.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 153, 255), 1, true), "USÚARIO"));
        jPanel3.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 130, 230, 40));

        jPasswordField1.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 153, 255), 1, true), "SENHA"));
        jPasswordField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPasswordField1ActionPerformed(evt);
            }
        });
        jPanel3.add(jPasswordField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 180, 230, 40));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sf/ce/imagens/Icons/entrar.png"))); // NOI18N
        jButton1.setText("Entrar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 230, 110, 30));

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sf/ce/imagens/Icons/sair.png"))); // NOI18N
        jButton2.setText("Sair");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 230, 100, 30));

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sf/ce/imagens/Icons/Login1.png"))); // NOI18N
        jPanel3.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 430, 280));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        setSize(new java.awt.Dimension(421, 271));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jPasswordField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPasswordField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPasswordField1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        entrarSistema();
//        if (jPasswordField1.getText().equalsIgnoreCase("Tesouraria.2018")) {
//            new frmAdministradorFinancas1280X1024(con).setVisible(true);
//        }else{
//           
//        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        System.exit(0);
        // new AcessoPrincipal().setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    public String getData() {
        Date dataSistema = new Date();
        // SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
        SimpleDateFormat formato = new SimpleDateFormat("yyyy-MM-dd");
        data = formato.format(dataSistema);
        System.out.println("Data:" + data);
        return data;
    }

    public void entrarSistema() {
        int codTipo = 0;
        int codPonto = 0;
        mostrarLembreteLicenca();
        Config lic = (Config) new IO().read("conf");
        String mac = lic.getMc();
        if (jPasswordField1.getText().equalsIgnoreCase("mindvision.2018")) {
            new ConfiguracaoLicenca().setVisible(true);
//            System.out.println("aqui mac");
        } else if (!licenca()) {
            codigoTipoUtilizador = controllerUsuario.getTipoUtilizador(jTextField1.getText());
            if (controllerUsuario.login(jTextField1.getText(), jPasswordField1.getText())) {
                String dataCadastro = controllerUsuario.getDataCadastro(jTextField1.getText());
                if (getData().equalsIgnoreCase(dataCadastro)) {
                    int resposta = JOptionPane.showConfirmDialog(null, "Benvindo ao Ednicare,por favor reset a senha?", "Atenção", JOptionPane.YES_NO_OPTION);
                    if (resposta == JOptionPane.YES_OPTION) {
                        try {
                            new ResetUtilizador(1,jTextField1.getText()).setVisible(true);
                            dispose();
                        } catch (SQLException ex) {
                            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    } else {
                        new AcessoPrincipal(jTextField1.getText(), codigoTipoUtilizador).setVisible(true);
                        dispose();
                    }
                } else {
                    new AcessoPrincipal(jTextField1.getText(), codigoTipoUtilizador).setVisible(true);
                    dispose();
                }
                //new Home(jTextField1.getText()).setVisible(true);

            } else {
                JOptionPane.showMessageDialog(null, "Login Invalido, Tenta novamente!", "Erro", JOptionPane.ERROR_MESSAGE);
            }

        }
//        else if (!licenca()) {
//            codigoTipoUtilizador = controllerUsuario.getTipoUtilizador(jTextField1.getText());
//            if (controllerUsuario.login(jTextField1.getText(), jPasswordField1.getText()) && codigoTipoUtilizador == 4) {
//                new Home(jTextField1.getText()).setVisible(true);
//                dispose();
//            } else if (controllerUsuario.login(jTextField1.getText(), jPasswordField1.getText()) && codigoTipoUtilizador == 1) {
//                // int codigoTipoUtilizador = controllerUsuario.getTipoUtilizador(jTextField1.getText());
//                new HomeMedicos(jTextField1.getText()).setVisible(true);
//                dispose();
//            } else if (controllerUsuario.login(jTextField1.getText(), jPasswordField1.getText()) && codigoTipoUtilizador == 2) {
//                new HomeEnfermagem(jTextField1.getText()).setVisible(true);
//                dispose();
//            } else if (controllerUsuario.login(jTextField1.getText(), jPasswordField1.getText()) && codigoTipoUtilizador == 5) {
//                System.out.println("Entrou e passou aqui");
//                new HomeLaboratorio(jTextField1.getText()).setVisible(true);
//                dispose();
//            } else if (controllerUsuario.login(jTextField1.getText(), jPasswordField1.getText()) && codigoTipoUtilizador == 6) {
//                System.out.println("Entrou e passou aqui");
//                new HomeRaioX(jTextField1.getText()).setVisible(true);
//                dispose();
//            } else if (controllerUsuario.login(jTextField1.getText(), jPasswordField1.getText()) && codigoTipoUtilizador == 8) {
//                System.out.println("Entrou e passou aqui");
//                new HomeEcografia(jTextField1.getText()).setVisible(true);
//                dispose();
//            } else if (controllerUsuario.login(jTextField1.getText(), jPasswordField1.getText()) && codigoTipoUtilizador == 3) {
//                System.out.println("Entrou e passou aqui");
//                new HomeAdministracao(jTextField1.getText()).setVisible(true);
//                dispose();
//
//            } else if (controllerUsuario.login(jTextField1.getText(), jPasswordField1.getText()) && codigoTipoUtilizador == 10) {
//                System.out.println("Entrou e passou aqui");
//                new HomeFarma(jTextField1.getText()).setVisible(true);
//                dispose();
//            } else if (controllerUsuario.login(jTextField1.getText(), jPasswordField1.getText()) && codigoTipoUtilizador == 9) {
//                System.out.println("Entrou e passou aqui");
//                new HomeFacturacao(jTextField1.getText()).setVisible(true);
//                dispose();
//            } else {
//                JOptionPane.showMessageDialog(null, "Login Invalido, Tenta novamente!", "Erro", JOptionPane.ERROR_MESSAGE);
//            }
//
//        } else {
//            JOptionPane.showMessageDialog(null, "Licença expirada em " + getDataValidadeLicenca() + ". Contacte a Mind Vision Tecnology!", "Aviso", JOptionPane.WARNING_MESSAGE);
//        }

    }

    public void mostrarLembreteLicenca() {
        Date d1 = null;
        Date d2 = null;

        try {

            SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-d");

            d1 = df.parse(getDataActualL());
            d2 = df.parse(getDataValidadeLicenca());

            long dt = (d2.getTime() - d1.getTime()) + 3600000;
            long dias = (dt / 86400000L);

            if (dias > 0 && dias <= 5) {
                JOptionPane.showMessageDialog(null, "A sua licena expira em " + dias + " dias. Contacte a Mind Vision Tecnology!", "Renovação de Licença", JOptionPane.WARNING_MESSAGE);
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    public String getDataValidadeLicenca() {
        //busca a data de bloqueio na bd
        Config lic = (Config) new IO().read("conf");

        int anoBloqueio = parseInt(lic.getVaidadeF().substring(0, 4));
        int mesBloqueio = parseInt(lic.getVaidadeF().substring(5, 7));
        int diaBloqueio = parseInt(lic.getVaidadeF().substring(8, 10));
        System.out.println("Data--> " + anoBloqueio + "-" + mesBloqueio + "-" + diaBloqueio);
        return anoBloqueio + "-" + mesBloqueio + "-" + diaBloqueio;

    }

    public String getDataActualL() {
        //buscar data actual
        Calendar calendario = Calendar.getInstance();
        int dia = calendario.get(Calendar.DAY_OF_MONTH);
        int mes = calendario.get(Calendar.MONTH) + 1;
        int ano = calendario.get(Calendar.YEAR);

        return ano + "-" + mes + "-" + dia;
    }

    public boolean licenca() {
        //buscar data a dat actual
        Calendar calendario = Calendar.getInstance();
        int dia = calendario.get(Calendar.DAY_OF_MONTH);
        int mes = calendario.get(Calendar.MONTH) + 1;
        int ano = calendario.get(Calendar.YEAR);

        //busca a data de bloqueio na bd
//        Configuracao dataLicencaModelo = (Configuracao) new ConfigModelo().ler("dataLicenca");
        Config lic = (Config) new IO().read("conf");

        int anoBloqueio = parseInt(lic.getVaidadeF().substring(0, 4));
        int mesBloqueio = parseInt(lic.getVaidadeF().substring(5, 7));
        int diaBloqueio = parseInt(lic.getVaidadeF().substring(8, 10));

        Date dataActual = new Date(ano, mes, dia);
        Date dataBloq = new Date(anoBloqueio, mesBloqueio, diaBloqueio);
        return dataActual.compareTo(dataBloq) > 0;

    }

    public String getMc() {
        String macAddr = null;
        List<String> Enderecomac = new ArrayList<String>();
        StringBuilder sb = null;
        try {
            Enumeration<NetworkInterface> eth = NetworkInterface
                    .getNetworkInterfaces();
            while (eth.hasMoreElements()) {
                NetworkInterface eth0 = eth.nextElement();
                byte[] mac = eth0.getHardwareAddress();
                sb = new StringBuilder();
                if (mac != null) {
                    for (int i = 0; i < mac.length; i++) {
                        String aux = String.format("%02X%s", mac[i],
                                (i < mac.length - 1) ? "-" : "");
                        sb.append(aux);
                    }
                    if (sb.toString().length() <= 18) {
                        macAddr = sb.toString();
                    }
                    String a = String.valueOf(sb);
                    System.out.println("Mac 1 " + sb);
                    Enderecomac.add(a);
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return Enderecomac.get(0).toString();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
